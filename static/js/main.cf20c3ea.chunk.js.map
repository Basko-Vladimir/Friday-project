{"version":3,"sources":["main/UI/Header/Header.module.scss","main/UI/common/Paginator/Paginator.module.scss","main/UI/common/Table/Table.module.scss","main/UI/common/Message/Message.module.scss","features/Sign-In/UI/SignIn.module.scss","main/UI/common/LoadingToggle/Loading.module.scss","features/Sign-Up/UI/SignUp.module.scss","main/UI/common/Search/Search.module.scss","main/UI/common/NewInput/NewInput.module.scss","main/UI/common/Button/Button.module.scss","main/UI/common/Input/Input.module.css","features/Set-New-Pass/UI/SetNewPass.module.scss","features/Forgot/UI/Forgot.module.scss","main/UI/common/Table/ColumnsHeaders/ColumnsHeaders.module.scss","features/Sign-In/DAL/signInAPI.ts","features/Sign-In/LS-service/localStorage.ts","features/Sign-Up/BLL/SignUpTypes.ts","features/Sign-Up/DAL/SignUpAPI.ts","features/Sign-Up/BLL/SignUpReducer.ts","main/BLL/appReducer.ts","features/Sign-In/BLL/signInReducer.ts","main/UI/common/NewInput/NewInput.tsx","main/UI/common/Button/Button.tsx","main/UI/common/Message/Message.tsx","features/Sign-In/UI/SignIn.tsx","main/UI/common/LoadingToggle/Loading.tsx","features/Sign-In/UI/SignInContainer.tsx","main/UI/common/Input/Input.tsx","features/Sign-Up/UI/SignUp.tsx","features/Set-New-Pass/UI/SetNewPass.tsx","features/Set-New-Pass/DAL/setNewPassAPI.ts","features/Set-New-Pass/BLL/setNewPassReducer.ts","features/Set-New-Pass/UI/SetNewPassContainer.tsx","features/Profile/Profile.tsx","features/Forgot/UI/Forgot.tsx","features/Forgot/DAL/forgotAPI.ts","features/Forgot/BLL/forgotReducer.ts","features/Forgot/UI/ForgotContainer.tsx","main/UI/common/Table/ColumnsHeaders/ColumnsHeaders.tsx","main/UI/common/Table/Table.tsx","features/Packs/DAL/packsAPI.ts","features/Packs/BLL/packsReducer.ts","main/UI/common/Search/Search.tsx","main/UI/common/Paginator/Paginator.tsx","features/Packs/UI/Packs.tsx","features/Cards/DAL/cardsAPI.ts","features/Cards/BLL/cardsReducer.ts","features/Cards/UI/Cards.tsx","main/UI/Routes/Routes.tsx","main/UI/Header/Header.tsx","App.tsx","serviceWorker.ts","main/BLL/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","authAPI","email","password","rememberMe","post","then","res","data","token","setItemToLS","key","value","localStorage","setItem","JSON","stringify","getItemFromLS","getItem","parse","SIGN_UP_ERROR","IS_LOADING","SignUpAPI","a","response","initialState","isLoading","message","signUpSuccess","type","SignUpError","errorMessage","SET_MESSAGE_TEXT","SET_INITIALIZE","isInitialized","setMessageText","messageText","SET_USER_DATA","LOGIN_SUCCESS","isAuth","userData","setUserData","loginSuccess","setAuthMe","dispatch","NewInput","React","memo","error","onChangeHandler","onChange","props","className","styles","input","e","currentTarget","Button","title","button","Message","isResponseError","actionCreator","messageClass","useDispatch","background","onClick","SignIn","isRemember","changePass","changeEmail","changeIsRemember","sendFormData","onSubmit","form","placeholder","to","FORGOT_PATH","forgotLink","checkbox","checked","SIGN_UP_PATH","Loading","useState","points","setPoints","useSelector","state","signUp","s","body","hide","loadingProgress","setTimeout","length","SignInContainer","app","signIn","firstRendering","setFirstRendering","setEmail","setPassword","setIsRemember","useEffect","useCallback","preventDefault","login","PROFILE_PATH","Input","changeInput","SignUp","firstPass","secondPass","setFirstPass","setLogin","setSecondPass","registerMe","similar","wrongPassword","responseMessage","container","inputs","SignUpContainer","setSimilar","SIGN_IN_PATH","success","SetNewPass","passwordRepeat","sendNewPassword","changePassword","changePasswordRepeat","setNewPassAPI","resetPasswordToken","SET_NEW_PASS_SUCCESS","newPassSuccess","SetNewPassContainer","setPasswordRepeat","setNewPass","resetToken","useParams","isSuccess","setNewPassword","Profile","created","String","isAdmin","name","publicCardPacksCount","tokenDeathTime","updated","verified","__v","_id","Forgot","sendEmail","forgotAPI","html1","html2","SET_FORGOT_SUCCESS","forgotSuccess","ForgotContainer","forgot","onSendEmail","ColumnsHeaders","sortInc","setSort","sortDirection","columnsHeaders","addItem","getItems","onSetSort","property","textContent","replace","typeSort","toLowerCase","innerHTML","headers","map","header","i","Table","rows","deleteItem","updateItem","tableModel","table","row","CARDS_PATH","grade","buttonColumn","question","answer","packsAPI","sortParams","pageCount","page","get","cardsPack","idPack","put","delete","SET_PACKS","UPDATE_PACK","SET_NEW_PAGE","packs","setPacks","updatePackAC","newPack","getPacks","cardPacks","Search","setQuery","searchQuery","toSearch","toReset","searchArea","style","marginRight","SearchContainer","setSearchQuery","result","filter","match","RegExp","Paginator","setPage","arrow","PaginatorContainer","newPage","SetNewPageAC","getPacksNew","Packs","onGetPacks","onUpdatePack","updatedCardsPack","changePack","onAddPack","addPack","onDeletePack","deletePack","display","flexDirection","alignItems","cardsAPI","packId","card","cardsPack_id","cardId","SET_CARDS","UPDATE_CARD","cards","updateCardAC","newCard","getCards","Cards","onGetCards","updatedCard","changeCard","addCard","deletedCard","deleteCard","Routes","path","render","exact","Header","navMenu","activeClassName","active","signOut","App","Boolean","window","location","hostname","rootReducer","combineReducers","action","p","c","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.cf20c3ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__d8TJ1\",\"navMenu\":\"Header_navMenu__XmOBE\",\"active\":\"Header_active__3NrMy\",\"signOut\":\"Header_signOut__uE1AS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Paginator_container__-8AIP\",\"arrow\":\"Paginator_arrow__afc1Q\",\"button\":\"Paginator_button__54szc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3fQUw\",\"headers\":\"Table_headers__17WSi\",\"rows\":\"Table_rows__1I5AT\",\"row\":\"Table_row__1tWSm\",\"buttonColumn\":\"Table_buttonColumn__3bNaJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Message_background__1_Cvs\",\"message\":\"Message_message__2OSW_\",\"error\":\"Message_error__j9aN1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SignIn_form__o7Htx\",\"checkbox\":\"SignIn_checkbox__3Ub6U\",\"background\":\"SignIn_background__11NxE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Loading_body__5qWIK\",\"loadingProgress\":\"Loading_loadingProgress__149ZI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SignUp_container__29LBU\",\"inputs\":\"SignUp_inputs__1TLkz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Search_container__7ghzK\",\"searchArea\":\"Search_searchArea__38Whk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewInput_input__2Agb1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2gVcE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3ZTlA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SetNewPass_form__JPazo\",\"background\":\"SetNewPass_background__1F51k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Forgot_form__2ccYz\",\"background\":\"Forgot_background__3Hif5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headers\":\"ColumnsHeaders_headers__3lseU\"};","import axios from 'axios';\r\nimport {UserDataType} from '../types/ResponseSuccessTypes';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0'\r\n});\r\n\r\n\r\nexport const authAPI = {\r\n    login (email: string, password: string, rememberMe: boolean = false ) {\r\n        return instance.post<UserDataType>('/auth/login', {email, password, rememberMe})\r\n            .then(res => res.data)\r\n    },\r\n\r\n    authMe (token: string) {\r\n       return instance.post<UserDataType>('/auth/me', {token})\r\n            .then(res => res.data);\r\n    }\r\n};\r\n","\r\n\r\nexport const setItemToLS = (key: string, value: any) => {\r\n   localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nexport const getItemFromLS= (key: string): string | undefined => {\r\n    const value = localStorage.getItem(key);\r\n    if (value) return JSON.parse(value);\r\n};","import React from \"react\";\r\n\r\n\r\nexport const SIGN_UP_SUCCESS = 'SignUpReducer/SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_ERROR = 'SignUpReducer/SIGN_UP_ERROR';\r\nexport const IS_LOADING = 'SignUpReducer/IS_LOADING';\r\n\r\n// Типизация SignUp.tsx\r\nexport type SignUpPropsType = {\r\n    login: string\r\n    setLogin: (value: string) => void\r\n    firstPass: string\r\n    setFirstPass: (value: string) => void\r\n    secondPass: string\r\n    setSecondPass: (value: string) => void\r\n    similar: boolean\r\n    registerMe: (e: React.MouseEvent) => void\r\n    responseMessage: string\r\n    wrongPassword: (e: React.MouseEvent) => void\r\n    isLoading: (value: boolean) => IsLoadingACType\r\n}\r\n\r\n\r\n\r\nexport type SignUpSuccessType = {\r\n    type: typeof SIGN_UP_SUCCESS\r\n    signUpSuccess: boolean\r\n}\r\nexport type SignUpErrorType = {\r\n    type: typeof SIGN_UP_ERROR\r\n    errorMessage: string\r\n}\r\nexport type IsLoadingACType = {\r\n    type: typeof IS_LOADING\r\n    value: boolean\r\n}\r\n\r\n\r\n\r\n\r\nexport type ChatActionTypes = SignUpSuccessType | SignUpErrorType | IsLoadingACType","import axios from \"axios\";\r\n\r\nexport const baseURL = 'https://cards-nya-back.herokuapp.com/1.0/';\r\n\r\nexport const instance = axios.create({\r\n    baseURL\r\n});\r\n\r\nexport type SignUpType =  {\r\n    success: boolean\r\n    error: string\r\n}\r\n\r\nexport const SignUpAPI = {\r\n    SignUpAPI: async (email: string, password: string) => {\r\n        const response = await instance.post<SignUpType>('/auth/register', {email, password});\r\n        return response.data;\r\n    }\r\n\r\n};","import {\r\n    ChatActionTypes, IS_LOADING,\r\n    IsLoadingACType,\r\n    SIGN_UP_ERROR,\r\n    SIGN_UP_SUCCESS,\r\n    SignUpErrorType,\r\n    SignUpSuccessType\r\n} from \"./SignUpTypes\";\r\nimport {Dispatch} from \"redux\";\r\nimport {SignUpAPI} from \"../DAL/SignUpAPI\";\r\n\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    message: '',\r\n    signUpSuccess: false\r\n};\r\n\r\ntype StateType = typeof initialState;\r\n\r\nexport const SingUpReducer = (state: StateType = initialState, action: any): StateType => {\r\n    switch (action.type) {\r\n        case SIGN_UP_SUCCESS:\r\n            return {...state, message: 'done!', signUpSuccess: action.signUpSuccess};\r\n        case SIGN_UP_ERROR:\r\n            return {...state, message: action.errorMessage};\r\n        case IS_LOADING:\r\n            return {\r\n                ...state, isLoading: action.value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n// Action Creators\r\nexport const isLoading = (value: boolean):IsLoadingACType => ({type: IS_LOADING, value});\r\n\r\nconst SignUpSuccess = (signUpSuccess: boolean)\r\n    : SignUpSuccessType => ({type: SIGN_UP_SUCCESS, signUpSuccess});\r\nexport const SignUpError = (errorMessage: string)\r\n    : SignUpErrorType => ({type: SIGN_UP_ERROR, errorMessage});\r\n\r\n// Thunks\r\n\r\nexport const signUpTC = (email:string, password:string) =>\r\n    async(dispatch: Dispatch<ChatActionTypes>)  => {\r\n    debugger\r\n        try {\r\n            dispatch(isLoading(true));\r\n            const data = await SignUpAPI.SignUpAPI(email, password);\r\n            if(data.error) {\r\n                dispatch(SignUpError(data.error));\r\n            } else\r\n                dispatch(SignUpSuccess(data.success))\r\n        } catch (e) {\r\n            dispatch(SignUpError(e.response.data.error))\r\n        }\r\n        dispatch(isLoading(false));\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n","import {ThunkAction} from 'redux-thunk';\r\nimport {AppStateType} from './store';\r\nimport {setAuthMe} from '../../features/Sign-In/BLL/signInReducer';\r\nimport {isLoading} from '../../features/Sign-Up/BLL/SignUpReducer';\r\nimport {IsLoadingACType} from '../../features/Sign-Up/BLL/SignUpTypes';\r\n\r\nconst SET_MESSAGE_TEXT = 'cards/signInReducer/SET_MESSAGE_TEXT';\r\nconst SET_INITIALIZE = 'cards/signInReducer/SET_INITIALIZE';\r\n\r\nconst initialState = {\r\n    message: '',\r\n    isInitialized: false\r\n};\r\n\r\nexport type StateType = typeof initialState;\r\ntype ActionsType = SetMessageTextType | SetInitializeType | IsLoadingACType;\r\n\r\nexport const appReducer = (state: StateType = initialState, action: ActionsType): StateType => {\r\n    switch (action.type) {\r\n        case SET_MESSAGE_TEXT:\r\n            return {\r\n                ...state,\r\n                message: action.messageText\r\n            };\r\n        case SET_INITIALIZE:\r\n            return {\r\n                ...state,\r\n                isInitialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport type SetMessageTextType = ReturnType<typeof setMessageText>;\r\nexport const setMessageText = (messageText: string) => ({type: SET_MESSAGE_TEXT, messageText} as const);\r\n\r\ntype SetInitializeType = ReturnType<typeof setInitialize>;\r\nconst setInitialize = () => ({type: SET_INITIALIZE} as const);\r\n\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>;\r\n\r\nexport const initializeApp = ():ThunkType  => async (dispatch) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        await dispatch(setAuthMe(''));\r\n        dispatch(setInitialize())\r\n    } catch (e) {\r\n        setMessageText(e.response.data.error)\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};\r\n\r\n\r\n","import {Dispatch} from 'redux';\r\nimport {authAPI} from '../DAL/signInAPI';\r\nimport {UserDataType} from '../types/ResponseSuccessTypes';\r\nimport {ThunkAction} from 'redux-thunk';\r\nimport {AppStateType} from '../../../main/BLL/store';\r\nimport {setItemToLS} from '../LS-service/localStorage';\r\nimport {SetMessageTextType, setMessageText} from '../../../main/BLL/appReducer';\r\nimport {isLoading} from '../../Sign-Up/BLL/SignUpReducer';\r\nimport {IsLoadingACType} from '../../Sign-Up/BLL/SignUpTypes';\r\n\r\nconst SET_USER_DATA = 'cards/signInReducer/SET_USER_DATA';\r\nconst LOGIN_SUCCESS = 'cards/signInReducer/LOGIN_SUCCESS';\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    userData: null as UserDataType | null,\r\n};\r\n\r\nexport type StateType = typeof initialState;\r\n\r\nexport const signInReducer = (state: StateType = initialState, action: ActionsTypes): StateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                userData: action.userData\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype ActionsTypes = SetUserDataType | LoginSuccessType | SetMessageTextType | IsLoadingACType;\r\n\r\ntype SetUserDataType = ReturnType<typeof setUserData>\r\nexport const setUserData = (userData: UserDataType | null) => ({type: SET_USER_DATA, userData} as const);\r\n\r\ntype LoginSuccessType = ReturnType<typeof loginSuccess>;\r\nexport const loginSuccess = (isAuth: boolean) => ({type: LOGIN_SUCCESS, isAuth} as const);\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\r\n\r\nexport const login = (email: string, password: string, isRemember: boolean): ThunkType => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(isLoading(true));\r\n            const data = await authAPI.login(email, password, isRemember);\r\n            setItemToLS('token', data.token);\r\n            dispatch(setUserData({...data}));\r\n            dispatch(loginSuccess(true));\r\n        } catch (err) {\r\n            dispatch(setMessageText(err.response.data.error))\r\n        } finally {\r\n            dispatch(isLoading(false));\r\n        }\r\n    };\r\n};\r\n\r\nexport const setAuthMe = (token: string) => async (dispatch: Dispatch<ActionsTypes>) => {\r\n    try {\r\n        dispatch(loginSuccess(true));\r\n        const data = await authAPI.authMe(token);\r\n        setItemToLS('token', data.token);\r\n        dispatch(setUserData({...data}));\r\n    } catch (err) {\r\n        dispatch(loginSuccess(false));\r\n    }\r\n};\r\n\r\n\r\n\r\n","import React, {InputHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react';\r\nimport styles from './NewInput.module.scss';\r\n\r\nexport type InputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement> & { error?: string, onChangeHandler?: (value: string) => void }\r\n\r\nexport const NewInput: React.FC<InputPropsType> = React.memo(({error, onChangeHandler, onChange,  ...props}) => {\r\n\r\n   const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n       onChangeHandler && onChangeHandler(e.currentTarget.value);\r\n       onChange && onChange(e)\r\n   };\r\n    return (\r\n        <>\r\n            <input className={styles.input} onChange={onChangeCallback} {...props}/>\r\n            {error && <span>{error}</span>}\r\n        </>\r\n    )\r\n});\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport styles from './Button.module.scss';\r\n\r\nexport type ButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>,\r\n    HTMLButtonElement> & { title: string };\r\n\r\nexport const Button: React.FC<ButtonPropsType> = React.memo(({title, ...props}) => {\r\n    return (\r\n        <div>\r\n            <button className={styles.button} {...props}>{title}</button>\r\n        </div>\r\n    )\r\n});\r\n","import React from 'react';\r\nimport styles from './Message.module.scss';\r\nimport {Button} from '../Button/Button';\r\nimport {useDispatch} from 'react-redux';\r\nimport {SetMessageTextType} from '../../../BLL/appReducer';\r\n\r\ntype MessagePropsType = {\r\n    messageText: string\r\n    isResponseError: boolean\r\n    actionCreator: SetMessageTextType\r\n}\r\n\r\nexport const Message: React.FC<MessagePropsType> = React.memo((props) => {\r\n    const {messageText, isResponseError, actionCreator} = props;\r\n    const messageClass = isResponseError ? `${styles.message} ${styles.error} ` : styles.message;\r\n    const dispatch = useDispatch();\r\n\r\n    const closeMessage = () => {\r\n        dispatch(actionCreator)\r\n    };\r\n\r\n    return <>\r\n        <div className={styles.background}> </div>\r\n        <div className={messageClass}>\r\n            <h3>{messageText}</h3>\r\n            <Button title={'Close'} onClick={closeMessage}/>\r\n        </div>\r\n    </>\r\n});","import React, {ChangeEvent, FormEvent} from 'react';\r\nimport styles from './SignIn.module.scss';\r\nimport {NewInput} from '../../../main/UI/common/NewInput/NewInput';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {FORGOT_PATH, SIGN_UP_PATH} from '../../../main/UI/Routes/Routes';\r\nimport {Button} from '../../../main/UI/common/Button/Button';\r\nimport {Message} from '../../../main/UI/common/Message/Message';\r\nimport {setMessageText} from '../../../main/BLL/appReducer';\r\n\r\ntype SignInPropsType = {\r\n    email: string\r\n    password: string\r\n    isRemember: boolean\r\n    messageText: string\r\n    changeEmail: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changePass: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeIsRemember: (e: ChangeEvent<HTMLInputElement>) => void\r\n    sendFormData: (e: FormEvent<HTMLFormElement>) => void\r\n}\r\n\r\nexport const SignIn: React.FC<SignInPropsType> = React.memo((props) => {\r\n    const {\r\n        email, password, isRemember, messageText, changePass,\r\n        changeEmail, changeIsRemember, sendFormData\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <h1>Sign In</h1>\r\n            <form onSubmit={sendFormData} className={styles.form}>\r\n                <NewInput type={'text'} placeholder={'Enter your e-mail'}\r\n                          onChange={changeEmail} value={email}/>\r\n                <NewInput type={'password'} placeholder={'Enter your password'}\r\n                          onChange={changePass} value={password}/>\r\n                <NavLink to={FORGOT_PATH} className={styles.forgotLink}>Forgot password?</NavLink>\r\n                <label>\r\n                    <NewInput type={'checkbox'} className={styles.checkbox}\r\n                              onChange={changeIsRemember} checked={isRemember}/>Remember Me\r\n                </label>\r\n                <Button title={'Sign in'}/>\r\n                <NavLink to={SIGN_UP_PATH}>Registration</NavLink>\r\n                {\r\n                    messageText && <Message messageText={messageText} isResponseError={true}\r\n                                            actionCreator={setMessageText('')}/>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n});","import React, {useState} from 'react';\r\nimport s from './Loading.module.scss'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../BLL/store\";\r\n\r\n\r\nconst Loading = () => {\r\n    let [points, setPoints] = useState<string>('.');\r\n    let isLoading = useSelector((state: AppStateType) => state.signUp.isLoading);\r\n    const loadingProgress = () => {\r\n        setTimeout(() => {\r\n            points.length < 5\r\n                ? setPoints(points + '.')\r\n                : setPoints('.')\r\n        }, 1000);\r\n        return points\r\n    };\r\n    return (\r\n        <div className={isLoading ? s.body : s.hide}>\r\n            <span className={s.loadingProgress}>\r\n                {isLoading && 'Loading' + loadingProgress()}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React, {ChangeEvent, FormEvent, useCallback, useEffect, useState} from 'react';\r\nimport {PROFILE_PATH} from '../../../main/UI/Routes/Routes';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {login, setAuthMe} from '../BLL/signInReducer';\r\nimport {AppStateType} from '../../../main/BLL/store';\r\nimport {SignIn} from './SignIn';\r\nimport {getItemFromLS} from '../LS-service/localStorage';\r\nimport Loading from '../../../main/UI/common/LoadingToggle/Loading';\r\n\r\nexport const SignInContainer = React.memo(() => {\r\n    const messageText = useSelector<AppStateType, string>(state => state.app.message);\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.signIn.isAuth);\r\n    const isLoading = useSelector<AppStateType, boolean>(state => state.signUp.isLoading);\r\n    const token = getItemFromLS('token');\r\n\r\n    const [firstRendering, setFirstRendering] = useState<boolean>(true);\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [isRemember, setIsRemember] = useState<boolean>(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (token && firstRendering && !isAuth) {\r\n            dispatch(setAuthMe(token));\r\n            setFirstRendering(false)\r\n        }\r\n    }, [dispatch, token, setFirstRendering, firstRendering, isAuth]);\r\n\r\n    const changeEmail = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }, [setEmail]);\r\n\r\n    const changePass = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }, [setPassword]);\r\n\r\n    const changeIsRemember = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setIsRemember(e.currentTarget.checked)\r\n    }, [setIsRemember]);\r\n\r\n    const sendFormData = useCallback((e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password, isRemember));\r\n        setEmail('');\r\n        setPassword('');\r\n        setIsRemember(false);\r\n    }, [dispatch, email, password, isRemember]);\r\n\r\n    if (isAuth) return <Redirect to={PROFILE_PATH}/>;\r\n\r\n    return <>\r\n        <SignIn email={email} password={password} isRemember={isRemember}\r\n                changeEmail={changeEmail} changePass={changePass} messageText={messageText}\r\n                changeIsRemember={changeIsRemember} sendFormData={sendFormData}/>\r\n        {isLoading && <Loading/>}\r\n    </>\r\n});\r\n\r\n","import React, {InputHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react';\r\nimport styles from './Input.module.css';\r\n\r\nexport type InputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement> & { error?: string, value?: string, changeInput?: (e:ChangeEvent<HTMLInputElement>) => void }\r\n\r\nexport const Input: React.FC<InputPropsType> = ({error, value, changeInput, ...props}) => {\r\n    return (\r\n        <>\r\n            <input className={styles.input} {...props} value={value} onChange={changeInput} />\r\n            {error && <span>{error}</span>}\r\n        </>\r\n    )\r\n};\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {Input} from '../../../main/UI/common/Input/Input';\r\nimport {Button} from '../../../main/UI/common/Button/Button';\r\nimport s from './SignUp.module.scss';\r\nimport {AppStateType} from \"../../../main/BLL/store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {isLoading, SignUpError, signUpTC} from \"../BLL/SignUpReducer\";\r\nimport Loading from \"../../../main/UI/common/LoadingToggle/Loading\";\r\nimport {SignUpPropsType} from \"../BLL/SignUpTypes\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {SIGN_IN_PATH} from \"../../../main/UI/Routes/Routes\";\r\n\r\n\r\n\r\n\r\nexport const SignUp: React.FC<SignUpPropsType> = ({login, firstPass,\r\n                                                      secondPass,\r\n                                                      setFirstPass, setLogin, setSecondPass,\r\n                                                      registerMe, similar,\r\n                                                      wrongPassword, responseMessage, isLoading}) => {\r\n    const setEmailCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLogin(e.currentTarget.value)\r\n    };\r\n    const setPassCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setFirstPass(e.currentTarget.value)\r\n    };\r\n    const setConfirmPassCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSecondPass(e.currentTarget.value)\r\n    };\r\n    return (\r\n        <div className={s.container}>\r\n            <h1>Sign Up</h1>\r\n\r\n            <div className={s.inputs}>\r\n                <Input placeholder={'Enter Your email'} changeInput={setEmailCallback}\r\n                        type='text' value={login}\r\n                />\r\n                <Input placeholder={'Enter Your Password'} changeInput={setPassCallback}\r\n                        type='password' value={firstPass}\r\n                />\r\n                <Input placeholder={'Confirm Your password'} changeInput={setConfirmPassCallback}\r\n                        type='password' value={secondPass}\r\n                /> {!similar && <span>password does not match!</span>}\r\n            </div>\r\n\r\n            <Button title={'Sign Up'} onClick={similar? registerMe : wrongPassword} />\r\n            {isLoading && <Loading/>}\r\n            {<span>{responseMessage}</span>}\r\n        </div>\r\n    )\r\n};\r\nexport const SignUpContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const {signUpSuccess, message} = useSelector((state: AppStateType) => state.signUp);\r\n    const [login, setLogin] = useState('');\r\n    const [similar, setSimilar] = useState<boolean>(false);\r\n    const [firstPass, setFirstPass] = useState<string>('');\r\n    const [secondPass, setSecondPass] = useState<string>('');\r\n    useEffect(() => {\r\n        if (secondPass === firstPass && secondPass) setSimilar(true);\r\n        else setSimilar(false)\r\n    }, [secondPass, firstPass]);\r\n    const registerMe = () => {\r\n        dispatch(signUpTC(login, firstPass))\r\n    };\r\n    const wrongPassword = () => {\r\n        dispatch(SignUpError('wrong credentials'))\r\n    };\r\n\r\n    return(\r\n        <>\r\n            { !signUpSuccess ?\r\n                <SignUp login={login} setLogin={setLogin}\r\n                    firstPass={firstPass} setFirstPass={setFirstPass}\r\n                    secondPass={secondPass} setSecondPass={setSecondPass}\r\n                    similar={similar} registerMe={registerMe}\r\n                    responseMessage={message} wrongPassword={wrongPassword}\r\n                    isLoading={isLoading}\r\n            />\r\n            : <Redirect to={SIGN_IN_PATH}/>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n","import React, {ChangeEvent, FormEvent} from 'react';\r\nimport styles from './SetNewPass.module.scss';\r\nimport {NewInput} from '../../../main/UI/common/NewInput/NewInput';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {SIGN_IN_PATH} from '../../../main/UI/Routes/Routes';\r\nimport {Button} from '../../../main/UI/common/Button/Button';\r\nimport {Message} from '../../../main/UI/common/Message/Message';\r\nimport {setMessageText} from '../../../main/BLL/appReducer';\r\n\r\ntype SetNewPassPropsType = {\r\n    password: string\r\n    passwordRepeat: string\r\n    sendNewPassword: (e: FormEvent<HTMLFormElement>) => void\r\n    changePassword: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changePasswordRepeat: (value: string) => void\r\n    messageText: string\r\n    isResponseError: boolean\r\n}\r\n\r\nexport const SetNewPass: React.FC<SetNewPassPropsType> = React.memo( (props) => {\r\n    const {password, passwordRepeat, sendNewPassword, changePassword,\r\n        changePasswordRepeat, messageText, isResponseError} = props;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Set New Password</h1>\r\n            <form className={styles.form} onSubmit={sendNewPassword}>\r\n                <NewInput value={password} placeholder={'Enter new password'}\r\n                          onChange={changePassword} type={'password'}/>\r\n                <NewInput value={passwordRepeat} placeholder={'Repeat password'}\r\n                          onChangeHandler={changePasswordRepeat} type={'password'}/>\r\n                <NavLink to={SIGN_IN_PATH}>Sign In</NavLink>\r\n                <Button title={'Set password'}/>\r\n            </form>\r\n            {\r\n                messageText && <Message messageText={messageText} isResponseError={isResponseError}\r\n                                        actionCreator={setMessageText('')} />\r\n            }\r\n        </div>\r\n    )\r\n});","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0'\r\n});\r\n\r\n\r\nexport const setNewPassAPI = {\r\n    setNewPass (password: string, resetPasswordToken: string = '') {\r\n        return instance.post<{success: boolean}>('/auth/set-new-password', {password, resetPasswordToken})\r\n            .then(res => res.data)\r\n    }\r\n};","import { Dispatch } from \"redux\";\r\nimport {setNewPassAPI} from '../DAL/setNewPassAPI';\r\nimport { setMessageText } from \"../../../main/BLL/appReducer\";\r\n\r\nconst SET_NEW_PASS_SUCCESS = 'cards/setNewPassReducer/setNewPassReducer';\r\n\r\nconst initialState = {\r\n    newPassSuccess: false\r\n};\r\n\r\ntype StateType = typeof initialState;\r\n\r\nexport const setNewPassReducer = (state:StateType = initialState, action: setNewPassSuccessType): StateType => {\r\n    switch (action.type) {\r\n        case SET_NEW_PASS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                newPassSuccess: action.isSuccess\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype setNewPassSuccessType = ReturnType<typeof setNewPassSuccess>;\r\nconst setNewPassSuccess = (isSuccess: boolean) => ({type: SET_NEW_PASS_SUCCESS, isSuccess} as const);\r\n\r\nexport const setNewPassword = (password: string, token: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        await setNewPassAPI.setNewPass(password, token);\r\n        dispatch(setNewPassSuccess(true));\r\n        dispatch(setMessageText('Success! Password changed'));\r\n    } catch (err) {\r\n        dispatch(setMessageText(err.response.data.error));\r\n    }\r\n\r\n};","import React, {ChangeEvent, FormEvent, useCallback, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../main/BLL/store';\r\nimport {SetNewPass} from './SetNewPass';\r\nimport { useParams } from 'react-router-dom';\r\nimport { setNewPassword } from '../BLL/setNewPassReducer';\r\nimport {setMessageText} from '../../../main/BLL/appReducer';\r\n\r\nexport const SetNewPassContainer = () => {\r\n    const [password, setPassword] = useState<string>('');\r\n    const [passwordRepeat, setPasswordRepeat] = useState<string>('');\r\n    const messageText = useSelector<AppStateType, string>(state => state.app.message);\r\n    const newPassSuccess = useSelector<AppStateType, boolean>(state => state.setNewPass.newPassSuccess);\r\n    const dispatch = useDispatch();\r\n    const {resetToken} = useParams();\r\n\r\n\r\n    const changePassword = useCallback( (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }, [setPassword]);\r\n\r\n    const changePasswordRepeat = useCallback( (value: string) => {\r\n        setPasswordRepeat(value)\r\n    }, [setPasswordRepeat]);\r\n\r\n    const sendNewPassword = useCallback( (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (password === passwordRepeat){\r\n            dispatch(setNewPassword(password, resetToken))\r\n        } else {\r\n            dispatch(setMessageText('Passwords doesn\\'t match'))\r\n        }\r\n        setPassword('');\r\n        setPasswordRepeat('');\r\n    }, [dispatch, password, passwordRepeat, resetToken]);\r\n\r\n    if (newPassSuccess) setTimeout( () => {}, 500);\r\n\r\n    // if (redirect) return <Redirect to={SIGN_IN_PATH}/>;\r\n\r\n    return <SetNewPass password={password} passwordRepeat={passwordRepeat}\r\n                                sendNewPassword={sendNewPassword} changePassword={changePassword}\r\n                                changePasswordRepeat={changePasswordRepeat} messageText={messageText}\r\n                                isResponseError={!newPassSuccess} />\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../main/BLL/store';\r\nimport {UserDataType} from '../Sign-In/types/ResponseSuccessTypes';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {SIGN_IN_PATH} from '../../main/UI/Routes/Routes';\r\n\r\nexport const Profile = () => {\r\n    const userData = useSelector<AppStateType, UserDataType | null>(state => state.signIn.userData);\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.signIn.isAuth);\r\n\r\n    if (!isAuth) return <Redirect to={SIGN_IN_PATH}/>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile </h1>\r\n            <div><b>created:</b> {userData?.created}</div>\r\n            <div><b>email:</b> {userData?.email}</div>\r\n            <div><b>isAdmin:</b> {String(userData?.isAdmin)}</div>\r\n            <div><b>name:</b> {userData?.name}</div>\r\n            <div><b>publicCardPacksCount:</b> {userData?.publicCardPacksCount}</div>\r\n            <div><b>rememberMe:</b> {String(userData?.rememberMe)}</div>\r\n            <div><b>success:</b> {String(userData?.success)}</div>\r\n            <div><b>token:</b> {userData?.token}</div>\r\n            <div><b>tokenDeathTime:</b> {userData?.tokenDeathTime}</div>\r\n            <div><b>updated:</b> {userData?.updated}</div>\r\n            <div><b>verified:</b> {String(userData?.verified)}</div>\r\n            <div><b>__v:</b> {userData?.__v}</div>\r\n            <div><b>_id:</b> {userData?._id}</div>\r\n        </div>\r\n    )\r\n};","import React, {ChangeEvent, FormEvent} from 'react';\r\nimport styles from './Forgot.module.scss';\r\nimport {Button} from '../../../main/UI/common/Button/Button';\r\nimport {NewInput} from '../../../main/UI/common/NewInput/NewInput';\r\nimport {SIGN_IN_PATH} from '../../../main/UI/Routes/Routes';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {Message} from '../../../main/UI/common/Message/Message';\r\nimport { setMessageText } from '../../../main/BLL/appReducer';\r\n\r\ntype ForgotPropsType = {\r\n    email: string\r\n    messageText: string\r\n    isResponseError: boolean\r\n    changeEmail: (e: ChangeEvent<HTMLInputElement>) => void\r\n    sendEmail: (e: FormEvent<HTMLFormElement>) => void\r\n}\r\n\r\nexport const Forgot:React.FC<ForgotPropsType> = React.memo((props) => {\r\n    const {email, messageText, isResponseError, changeEmail, sendEmail} = props;\r\n    return (\r\n        <div>\r\n            <h1>Forgot</h1>\r\n            <form className={styles.form} onSubmit={sendEmail}>\r\n                <NewInput type={'text'} placeholder={'Enter your e-mail'}\r\n                          value={email} onChange={changeEmail}/>\r\n                <NavLink to={SIGN_IN_PATH}>Sign In</NavLink>\r\n                <Button title={'Send email'}/>\r\n            </form>\r\n            {\r\n                messageText && <Message messageText={messageText} isResponseError={isResponseError}\r\n                                        actionCreator={setMessageText('')}/>\r\n            }\r\n        </div>\r\n    )\r\n});","import axios from 'axios';\r\nimport {ForgotSuccessType} from '../types/ResponseSuccessTypes';\r\n\r\nconst instance = axios.create({\r\n   baseURL: 'https://cards-nya-back.herokuapp.com/1.0'\r\n});\r\n\r\nexport const forgotAPI = {\r\n    sendEmail(email: string) {\r\n        return instance.post<ForgotSuccessType>('auth/forgot', {\r\n            email: email,\r\n            html1: \"<a href='http://localhost:3000/#/set-new-password/\",\r\n            html2: \"'>reset-password-link</a>\"\r\n        })\r\n            .then(res => res.data)\r\n    }\r\n};\r\n","import {Dispatch} from 'redux';\r\nimport {forgotAPI} from '../DAL/forgotAPI';\r\nimport {setMessageText, SetMessageTextType} from '../../../main/BLL/appReducer';\r\n\r\nconst SET_FORGOT_SUCCESS = 'cards/forgotReducer/SET_FORGOT_SUCCESS';\r\n\r\nconst initialState = {\r\n    forgotSuccess: false\r\n};\r\n\r\ntype StateType = typeof initialState;\r\n\r\nexport const forgotReducer = (state: StateType = initialState, action: SetForgotSuccessType): StateType => {\r\n    switch (action.type) {\r\n        case SET_FORGOT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                forgotSuccess: action.success\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype ActionsType = SetForgotSuccessType | SetMessageTextType;\r\n\r\ntype SetForgotSuccessType = ReturnType<typeof setForgotSuccess>\r\nexport const setForgotSuccess = (success: boolean) => ({type: SET_FORGOT_SUCCESS, success} as const);\r\n\r\nexport const sendEmail = (email: string) => async (dispatch: Dispatch<ActionsType>) => {\r\n    try {\r\n        await forgotAPI.sendEmail(email);\r\n        dispatch(setForgotSuccess(true));\r\n        dispatch(setMessageText('Success! Check your email'))\r\n    } catch (err) {\r\n        dispatch(setMessageText(err.response.data.error))\r\n    }\r\n};","import React, {ChangeEvent, FormEvent, useCallback, useState} from 'react';\r\nimport {Forgot} from './Forgot';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {sendEmail} from '../BLL/forgotReducer';\r\nimport {AppStateType} from '../../../main/BLL/store';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { SIGN_IN_PATH } from '../../../main/UI/Routes/Routes';\r\n\r\nexport const ForgotContainer = () => {\r\n    const [email, setEmail] = useState<string>('');\r\n    const messageText = useSelector<AppStateType, string>(state => state.app.message);\r\n    const forgotSuccess = useSelector<AppStateType, boolean>(state => state.forgot.forgotSuccess);\r\n    const dispatch = useDispatch();\r\n\r\n    const changeEmail = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }, [setEmail]);\r\n\r\n    const onSendEmail = useCallback((e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(sendEmail(email));\r\n        setEmail('');\r\n    }, [dispatch, email]);\r\n\r\n    if (forgotSuccess) return <Redirect to={SIGN_IN_PATH}/>;\r\n\r\n    return <Forgot email={email} changeEmail={changeEmail} isResponseError={!forgotSuccess}\r\n                                 messageText={messageText} sendEmail={onSendEmail}/>\r\n};","import React, {useState} from 'react';\r\nimport styles from './ColumnsHeaders.module.scss';\r\nimport {Button} from '../../Button/Button';\r\n\r\ntype HeadersPropsType = {\r\n    columnsHeaders: Array<string>\r\n    addItem: () => void\r\n    getItems: (sortParams: string) => void\r\n};\r\n\r\n\r\nexport const ColumnsHeaders: React.FC<HeadersPropsType> = React.memo((props) => {\r\n    const [sortInc, setSort] = useState<boolean>(false);\r\n    let sortDirection = '';\r\n\r\n    const {columnsHeaders, addItem, getItems} = props;\r\n\r\n    const onSetSort = (e: React.MouseEvent) => {\r\n        let property = e.currentTarget.textContent;\r\n        sortDirection = sortInc ? '&uarr;' : ' &darr;';\r\n        if (property) {\r\n            property = property.replace(/[^\\w]/g, '');\r\n            const typeSort = +sortInc + property.toLowerCase();\r\n            getItems(typeSort);\r\n        }\r\n        setSort(!sortInc);\r\n        e.currentTarget.innerHTML = `${property}  ${sortDirection}`\r\n    };\r\n\r\n    return (\r\n        <div className={styles.headers}>\r\n            {columnsHeaders.map((header, i) => {\r\n                    return i === columnsHeaders.length - 1\r\n                        ? <Button key={header} title={header} onClick={addItem}/>\r\n                        : <span key={header}>\r\n                            <b onClick={onSetSort}>{header}</b>\r\n                    </span>\r\n                }\r\n            )}\r\n        </div>\r\n    )\r\n});","import React from 'react';\r\nimport styles from './Table.module.scss';\r\n\r\nimport {Button} from '../Button/Button';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {CARDS_PATH} from '../../Routes/Routes';\r\nimport {ColumnsHeaders} from './ColumnsHeaders/ColumnsHeaders';\r\n\r\ntype TablePropsType = {\r\n    columnsHeaders: Array<string>\r\n    rows: Array<any> //Array<PackItemType> | Array<CardItemType> не работает такая типизация !\r\n    deleteItem: (id: string) => void\r\n    updateItem: (id: string) => void\r\n    addItem: () => void\r\n    getItems: (sortParams: string) => void\r\n    tableModel: string\r\n}\r\n\r\nexport const Table = React.memo(function (props:TablePropsType) {\r\n    const {columnsHeaders, rows, deleteItem, addItem, updateItem, tableModel, getItems} = props;\r\n\r\n    return (\r\n            <div className={styles.table}>\r\n                <ColumnsHeaders columnsHeaders={columnsHeaders} addItem={addItem} getItems={getItems}/>\r\n                {\r\n                    tableModel === 'packs'\r\n                        ? <div className={styles.rows}>\r\n                            {!rows.length && <span>Packs didn't create, yet</span>}\r\n                            {\r\n                                rows.map(row => {\r\n                                    return <div key={row._id} className={styles.row}>\r\n                                        <span>\r\n                                            <NavLink to={`${CARDS_PATH}/${row._id}`}>{row.name}</NavLink>\r\n                                        </span>\r\n                                        <span>{row.grade}</span>\r\n                                        <span className={styles.buttonColumn}>\r\n                                           <Button title={'Update'} onClick={() => updateItem(row._id)}/>\r\n                                           <Button title={'Delete'} onClick={() => deleteItem(row._id)}/>\r\n                                       </span>\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </div>\r\n                        : <div className={styles.rows}>\r\n                            {!rows.length && <span>Cards didn't create, yet</span>}\r\n                            {\r\n                                rows.map(row => {\r\n                                    return <div key={row._id} className={styles.row}>\r\n                                        <span>{row.question}</span>\r\n                                        <span>{row.answer}</span>\r\n                                        <span>{row.grade}</span>\r\n                                        <span className={styles.buttonColumn}>\r\n                                           <Button title={'Update'} onClick={() => updateItem(row._id)}/>\r\n                                           <Button title={'Delete'} onClick={() => deleteItem(row._id)}/>\r\n                                       </span>\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    }\r\n            </div>\r\n        )\r\n});\r\n","import axios from 'axios';\r\nimport {PacksType} from '../types';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0'\r\n});\r\n\r\nexport const packsAPI = {\r\n    getPacks (token: string, sortParams: string = '', pageCount: number = 4, page: number = 1 ) {\r\n        return instance.get<PacksType>(`/cards/pack?token=${token}&pageCount=${pageCount}&page=${page}&${sortParams}`)\r\n            .then(res => res.data)\r\n    },\r\n\r\n    addPack (token: string | undefined) {\r\n        return instance.post('/cards/pack', {\r\n            cardsPack: {\r\n                name: 'BaskoPack',\r\n                grade: 0\r\n            },\r\n            token\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n\r\n    updatePack (idPack: string, token: string | undefined) {\r\n        return instance.put('/cards/pack', {\r\n            cardsPack: {\r\n                _id: idPack,\r\n                name: 'changedBaskoPack'\r\n            },\r\n            token\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n\r\n    deletePack (idPack: string, token: string | undefined) {\r\n        return instance.delete(`/cards/pack?token=${token}&id=${idPack}`)\r\n            .then(res => res.data)\r\n    }\r\n};","import {Dispatch} from 'redux';\r\nimport {packsAPI} from '../DAL/packsAPI';\r\nimport {PackItemType} from '../types';\r\nimport {setItemToLS} from '../../Sign-In/LS-service/localStorage';\r\nimport {setMessageText, SetMessageTextType} from '../../../main/BLL/appReducer';\r\nimport {isLoading} from '../../Sign-Up/BLL/SignUpReducer';\r\nimport {IsLoadingACType} from '../../Sign-Up/BLL/SignUpTypes';\r\nimport {ThunkAction} from 'redux-thunk';\r\nimport {AppStateType} from '../../../main/BLL/store';\r\n\r\nconst SET_PACKS = 'cards/packsReducer/SET_PACKS';\r\nconst UPDATE_PACK = 'cards/packsReducer/UPDATE_PACK';\r\nconst SET_NEW_PAGE = 'cards/packsReducer/SET_NEW_PAGE';\r\n\r\nconst initialState = {\r\n    packs: [] as Array<PackItemType>,\r\n    pageCount: 4 as number,\r\n    page: 1 as number\r\n};\r\n\r\ntype StateType = typeof initialState;\r\ntype ActionsType = SetPacksType | UpdatePackType | SetMessageTextType | IsLoadingACType | SetNewPageType;\r\n\r\nexport const packsReducer = (state: StateType = initialState, action: ActionsType): StateType => {\r\n    switch (action.type) {\r\n        case SET_PACKS:\r\n            return {\r\n                ...state,\r\n                packs: action.packs\r\n            };\r\n        case UPDATE_PACK:\r\n            return {\r\n                ...state,\r\n              packs: state.packs.map( p => p._id === action.idPack ? {...p, ...action.newPack } : p)\r\n            };\r\n        case SET_NEW_PAGE:\r\n            return {\r\n                ...state,\r\n                page: action.newPage\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype SetPacksType = ReturnType<typeof setPacks>\r\nexport const setPacks = (packs: Array<PackItemType>) => ({type:SET_PACKS, packs} as const);\r\n\r\ntype UpdatePackType = ReturnType<typeof updatePackAC>;\r\nconst updatePackAC = (idPack: string, newPack: PackItemType) => ({type: UPDATE_PACK, idPack, newPack} as const);\r\n\r\ntype SetNewPageType = ReturnType<typeof SetNewPageAC>;\r\nexport const SetNewPageAC = (newPage: number) => ({type: SET_NEW_PAGE, newPage} as const);\r\n\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>;\r\n\r\nexport const getPacks = (token: string, sortParams?: string) =>  async (dispatch: Dispatch<ActionsType>) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const data = await packsAPI.getPacks(token, sortParams);\r\n        setItemToLS('token', data.token);\r\n        dispatch(setPacks(data.cardPacks));\r\n    } catch (e) {\r\n        dispatch(setMessageText(e.response.data.error))\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};\r\n\r\n\r\nexport const getPacksNew = (token: string, page: number) =>  async (dispatch: Dispatch<ActionsType>) => {\r\n    debugger\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const data = await packsAPI.getPacks(token, '', 4, page);\r\n        setItemToLS('token', data.token);\r\n        dispatch(setPacks(data.cardPacks));\r\n    } catch (e) {\r\n        dispatch(setMessageText(e.response.data.error))\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};\r\n\r\nexport const addPack = (token: string | undefined): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const data = await packsAPI.addPack(token);\r\n        await dispatch(getPacks(data.token));\r\n    } catch (e) {\r\n\r\n        dispatch(setMessageText(e.response.data.error))\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n\r\n};\r\n\r\nexport const changePack = (idPack: string, token: string | undefined) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const data = await packsAPI.updatePack(idPack, token);\r\n        setItemToLS('token', data.token);\r\n        dispatch(updatePackAC(idPack, data.updatedCardsPack));\r\n    } catch(e){\r\n        setItemToLS('token', e.response.data.token);\r\n        dispatch(setMessageText(e.response.data.error))\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};\r\n\r\nexport const deletePack = (idPack: string, token: string | undefined): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const data = await packsAPI.deletePack(idPack, token);\r\n        setItemToLS('token', data.token);\r\n        await dispatch(getPacks(data.token))\r\n    } catch (e) {\r\n        setItemToLS('token', e.response.data.token);\r\n        dispatch(setMessageText(e.response.data.error));\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};","import React, {InputHTMLAttributes, DetailedHTMLProps, ChangeEvent, useState} from 'react';\r\nimport {Button} from \"../Button/Button\";\r\nimport s from './Search.module.scss'\r\nimport {Input} from \"../Input/Input\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../BLL/store\";\r\nimport {PackItemType} from \"../../../../features/Packs/types\";\r\nimport {getPacks, setPacks} from \"../../../../features/Packs/BLL/packsReducer\";\r\nimport {getItemFromLS} from \"../../../../features/Sign-In/LS-service/localStorage\";\r\n\r\n\r\nexport type InputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement> &\r\n    { searchQuery?: string, setQuery?: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n        toSearch?: () => void, toReset?: () => void}\r\n\r\nexport const Search: React.FC<InputPropsType> =\r\n    React.memo(({ onChange, setQuery, searchQuery, toSearch, toReset, ...props}) => {\r\n\r\n\r\n    return <div className={s.container}>\r\n        <div className={s.searchArea}>\r\n            <Input changeInput={setQuery} {...props} type='text'\r\n                   placeholder='Card name' value={searchQuery}\r\n\r\n            />\r\n        </div>\r\n        <Button title='Search' onClick={toSearch} style={{marginRight: '20px'}}/>\r\n        <Button title='Reset' onClick={toReset}/>\r\n    </div>\r\n});\r\n\r\nexport const SearchContainer = () => {\r\n\r\n    // Достаём массив колод из state\r\n    const dispatch = useDispatch();\r\n    const cardsPack = useSelector<AppStateType, Array<PackItemType>>(state => state.packs.packs);\r\n\r\n    // Сброс результатов поиска\r\n    const toReset = () => {\r\n        const token = getItemFromLS('token') as string; // Достаём токен, т.к. его надо передать в getPacks\r\n        dispatch(getPacks(token))\r\n    };\r\n\r\n    const toSearch = () => {\r\n        let result = cardsPack.filter((i: PackItemType) => {\r\n            return i.name.match(new RegExp(searchQuery, 'g'));\r\n        });  // Поиск совпадений запроса в массиве колод\r\n        dispatch(setPacks(result)); // Сетаем новый массив\r\n    };\r\n\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const setQuery = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchQuery(e.currentTarget.value)\r\n    };\r\n\r\n    return <Search setQuery={setQuery} searchQuery={searchQuery} toSearch={toSearch} toReset={toReset}/>\r\n};\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps, useState} from 'react';\r\nimport s from './Paginator.module.scss';\r\nimport {Button} from \"../Button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../BLL/store\";\r\nimport {PackItemType} from \"../../../../features/Packs/types\";\r\nimport {getPacksNew, SetNewPageAC} from \"../../../../features/Packs/BLL/packsReducer\";\r\nimport {getItemFromLS} from \"../../../../features/Sign-In/LS-service/localStorage\";\r\n\r\nexport type ButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>,\r\n    HTMLButtonElement> & { title: string, page: number, setPage: () => void};\r\n\r\nconst Paginator: React.FC<ButtonPropsType> = React.memo(({title, page, setPage, ...props}) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <h3>Pages</h3>\r\n            <Button title={'<'} className={s.arrow}/>\r\n            <Button title={'1'} className={s.button}/>\r\n            <Button title={'2'} className={s.button} onClick={setPage}/>\r\n            <Button title={'3'} className={s.button}/>\r\n            <Button title={'4'} className={s.button}/>\r\n            <span>...</span>\r\n            <Button title={'10'} className={s.button}/>\r\n            <Button title={'>'} className={s.arrow}/>\r\n        </div>\r\n    )\r\n});\r\nexport const PaginatorContainer = () => {\r\n\r\n\r\n    const lastPage = () => { // Логика вычисления последней страницы\r\n\r\n    };\r\n    const newPage = 2;\r\n    const dispatch = useDispatch();\r\n    const setPage = () => {\r\n        dispatch(SetNewPageAC(newPage));\r\n        const token = getItemFromLS('token') as string;\r\n        dispatch(getPacksNew(token, newPage))\r\n    };\r\n\r\n    const page = useSelector<AppStateType, number>(s => s.packs.page);\r\n\r\n    return <Paginator title={''} page={page} setPage={setPage}/>\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {Table} from '../../../main/UI/common/Table/Table';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../main/BLL/store';\r\nimport {getItemFromLS} from '../../Sign-In/LS-service/localStorage';\r\nimport {addPack, changePack, deletePack, getPacks} from '../BLL/packsReducer';\r\nimport {SIGN_IN_PATH} from '../../../main/UI/Routes/Routes';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PackItemType} from '../types';\r\nimport {SearchContainer} from \"../../../main/UI/common/Search/Search\";\r\nimport {Message} from '../../../main/UI/common/Message/Message';\r\nimport {setMessageText} from '../../../main/BLL/appReducer';\r\nimport Loading from '../../../main/UI/common/LoadingToggle/Loading';\r\nimport {PaginatorContainer} from \"../../../main/UI/common/Paginator/Paginator\";\r\n\r\nexport const Packs = function () {\r\n    const headers = ['Name', 'Grade', 'Add Pack'];\r\n    const [firstRendering, setFirstRendering] = useState<boolean>(true);\r\n    const token = getItemFromLS('token');\r\n\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.signIn.isAuth);\r\n    const isLoading = useSelector<AppStateType, boolean>(state => state.signUp.isLoading);\r\n    const packs = useSelector<AppStateType, Array<PackItemType>>(state => state.packs.packs);\r\n    const messageText = useSelector<AppStateType, string>(state => state.app.message);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (firstRendering && token && isAuth) {\r\n            setFirstRendering(false);\r\n            dispatch(getPacks(token));\r\n        }\r\n    }, [dispatch, token, setFirstRendering, firstRendering, isAuth]);\r\n\r\n\r\n    const onGetPacks = useCallback((sortParams: string) => {\r\n        token && dispatch(getPacks(token, `sortPacks=${sortParams}`))\r\n    }, [dispatch, token]);\r\n\r\n    const onUpdatePack = useCallback((idPack: string) => {\r\n        dispatch(changePack(idPack, token));\r\n    }, [dispatch, token]);\r\n\r\n    const onAddPack = useCallback(() => {\r\n        dispatch(addPack(token))\r\n    }, [dispatch, token]);\r\n\r\n    const onDeletePack = useCallback((idPack: string) => {\r\n        dispatch(deletePack(idPack, token))\r\n    }, [dispatch, token]);\r\n\r\n    if (!isAuth) return <Redirect to={SIGN_IN_PATH}/>;\r\n\r\n\r\n    return <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n        <SearchContainer/>\r\n        <Table columnsHeaders={headers} rows={packs} getItems={onGetPacks}\r\n               deleteItem={onDeletePack} addItem={onAddPack}\r\n               updateItem={onUpdatePack} tableModel={'packs'}/>\r\n        {isLoading && <Loading/>}\r\n        {\r\n            messageText && <Message messageText={messageText} isResponseError={true}\r\n                                    actionCreator={setMessageText('')}/>\r\n        }\r\n        <PaginatorContainer/>\r\n    </div>\r\n\r\n};","import axios from 'axios';\r\nimport {CardsType, DeletedCardType, NewCardType, UpdatedCardType} from '../types';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0'\r\n});\r\n\r\nexport const cardsAPI = {\r\n    getCards (token: string, packId :string, sortParams: string = '') {\r\n        return instance.get<CardsType>(`/cards/card?token=${token}&cardsPack_id=${packId}&${sortParams}`)\r\n            .then(res => res.data)\r\n    },\r\n\r\n    addCard(token: string, packId:string) {\r\n        return instance.post<NewCardType>('/cards/card', {\r\n            card: {\r\n                cardsPack_id: packId,\r\n                question: 'No question Basko',\r\n                answer: 'No answer Basko',\r\n                grade: 0\r\n            },\r\n            token\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n\r\n    updateCard (cardId: string, token: string) {\r\n        return instance.put<UpdatedCardType>('/cards/card', {\r\n            card: {\r\n                _id: cardId,\r\n                question: 'Changed question Basko',\r\n                answer: 'Changed answer Basko',\r\n                grade: 0\r\n            },\r\n            token\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n\r\n    deleteCard (cardId: string, token: string) {\r\n        return instance.delete<DeletedCardType>(`/cards/card?token=${token}&id=${cardId}`)\r\n            .then(res => res.data)\r\n    }\r\n};","import {AppStateType} from '../../../main/BLL/store';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport {Dispatch} from 'redux';\r\nimport { isLoading } from '../../Sign-Up/BLL/SignUpReducer';\r\nimport { setItemToLS } from '../../Sign-In/LS-service/localStorage';\r\nimport {setMessageText, SetMessageTextType} from '../../../main/BLL/appReducer';\r\nimport {IsLoadingACType} from '../../Sign-Up/BLL/SignUpTypes';\r\nimport {cardsAPI} from '../DAL/cardsAPI';\r\nimport { CardItemType } from '../types';\r\n\r\nconst SET_CARDS = 'cards/packsReducer/SET_CARDS';\r\nconst UPDATE_CARD = 'cards/packsReducer/UPDATE_CARD';\r\n\r\nconst initialState = {\r\n    cards: [] as Array<CardItemType>\r\n};\r\n\r\ntype StateType = typeof initialState;\r\ntype ActionsType = SetPacksType | UpdateCardType | SetMessageTextType | IsLoadingACType;\r\n\r\nexport const cardsReducer = (state: StateType = initialState, action: ActionsType): StateType => {\r\n    switch (action.type) {\r\n        case SET_CARDS:\r\n            return {\r\n                ...state,\r\n                cards: action.cards\r\n            };\r\n        case UPDATE_CARD:\r\n            return {\r\n              ...state,\r\n              cards: state.cards.map( c => c._id === action.cardId ? {...c, ...action.newCard} : c )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype SetPacksType = ReturnType<typeof setCards>\r\nconst setCards = (cards: Array<CardItemType>) => ({type:SET_CARDS, cards} as const);\r\n\r\ntype UpdateCardType = ReturnType<typeof updateCardAC>;\r\nconst updateCardAC = (cardId: string, newCard: CardItemType) => ({type: UPDATE_CARD, cardId, newCard} as const);\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>;\r\n\r\nexport const getCards = (token: string, packId: string, sortParams?: string) =>  async (dispatch: Dispatch<ActionsType>) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const data = await cardsAPI.getCards(token, packId, sortParams);\r\n        setItemToLS('token', data.token);\r\n        dispatch(setCards(data.cards));\r\n    } catch (e) {\r\n        dispatch(setMessageText(e.response.data.error))\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};\r\n\r\nexport const addCard  = (token: string, packId: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const data = await cardsAPI.addCard(token, packId);\r\n        await dispatch(getCards(data.token, data.newCard.cardsPack_id));\r\n    } catch (e) {\r\n        setItemToLS('token', e.response.data.token);\r\n        dispatch(setMessageText(e.response.data.error))\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n\r\n};\r\n\r\nexport const changeCard = (cardId: string, token: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const data = await cardsAPI.updateCard(cardId, token);\r\n        setItemToLS('token', data.token);\r\n        dispatch(updateCardAC(data.updatedCard._id, data.updatedCard));\r\n    } catch(e){\r\n        dispatch(setMessageText(e.response.data.error))\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};\r\n\r\nexport const deleteCard = (cardId: string, token: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const data = await cardsAPI.deleteCard(cardId, token);\r\n        setItemToLS('token', data.token);\r\n        await dispatch(getCards(data.token, data.deletedCard.cardsPack_id))\r\n    } catch (e) {\r\n        dispatch(setMessageText(e.response.data.error));\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};","import React, {useCallback, useEffect, useState} from 'react';\r\nimport { Table } from '../../../main/UI/common/Table/Table';\r\nimport Loading from '../../../main/UI/common/LoadingToggle/Loading';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../main/BLL/store';\r\nimport {getItemFromLS} from '../../Sign-In/LS-service/localStorage';\r\nimport {Message} from '../../../main/UI/common/Message/Message';\r\nimport {setMessageText} from '../../../main/BLL/appReducer';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {SIGN_IN_PATH} from '../../../main/UI/Routes/Routes';\r\nimport {addCard, getCards, changeCard, deleteCard} from '../BLL/cardsReducer';\r\nimport {CardItemType} from '../types';\r\n\r\nexport const Cards = function () {\r\n    const headers = ['Question', 'Answer', 'Grade', 'Add Pack'];\r\n    const [firstRendering, setFirstRendering] = useState<boolean>(true);\r\n    const token = getItemFromLS('token');\r\n\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.signIn.isAuth);\r\n    const isLoading = useSelector<AppStateType, boolean>(state => state.signUp.isLoading);\r\n    const cards = useSelector<AppStateType, Array<CardItemType>>(state => state.cards.cards);\r\n    const messageText = useSelector<AppStateType, string>(state => state.app.message);\r\n    const {packId} = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (firstRendering && token && isAuth) {\r\n            setFirstRendering(false);\r\n            dispatch(getCards(token, packId));\r\n        }\r\n    }, [dispatch, token, setFirstRendering, firstRendering, isAuth, packId]);\r\n\r\n    const onGetCards = useCallback( (sortParams: string) => {\r\n        token && dispatch(getCards(token, packId, `sortCards=${sortParams}`))\r\n    }, [dispatch, token, packId]);\r\n\r\n    const onUpdatePack = useCallback((cardId: string) => {\r\n        token && dispatch(changeCard(cardId, token));\r\n    }, [dispatch, token]);\r\n\r\n    const onAddPack = useCallback( ()  => {\r\n       token && dispatch(addCard(token, packId,))\r\n    }, [dispatch, token, packId]);\r\n\r\n    const onDeletePack = useCallback((cardId: string) => {\r\n        token && dispatch(deleteCard(cardId, token))\r\n    },[dispatch, token]);\r\n\r\n    if (!isAuth) return <Redirect to={SIGN_IN_PATH}/>;\r\n\r\n    return <>\r\n        <Table columnsHeaders={headers} rows={cards} getItems={onGetCards}\r\n               deleteItem={onDeletePack} addItem={onAddPack}\r\n               updateItem={onUpdatePack} tableModel={'cards'}/>\r\n        {isLoading && <Loading/>}\r\n        {\r\n            messageText && <Message messageText={messageText} isResponseError={true}\r\n                                    actionCreator={setMessageText('')}/>\r\n        }\r\n    </>\r\n};","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport {SignInContainer} from '../../../features/Sign-In/UI/SignInContainer';\r\nimport {SignUpContainer} from '../../../features/Sign-Up/UI/SignUp';\r\nimport {SetNewPassContainer} from '../../../features/Set-New-Pass/UI/SetNewPassContainer';\r\nimport {Profile} from '../../../features/Profile/Profile';\r\nimport {ForgotContainer} from '../../../features/Forgot/UI/ForgotContainer';\r\nimport {Packs} from '../../../features/Packs/UI/Packs';\r\nimport {Cards} from '../../../features/Cards/UI/Cards';\r\n\r\nexport const SIGN_IN_PATH = '/sign-in';\r\nexport const SIGN_UP_PATH = '/sign-up';\r\nexport const FORGOT_PATH = '/forgot';\r\nexport const SET_NEW_PASS_PATH = '/set-new-password';\r\nexport const PROFILE_PATH = '/profile';\r\nexport const PACKS_PATH = '/packs';\r\nexport const CARDS_PATH = '/cards';\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path={SIGN_IN_PATH} render={() => <SignInContainer/>}/>\r\n            <Route path={SIGN_UP_PATH} render={() => <SignUpContainer/>}/>\r\n            <Route path={FORGOT_PATH} render={() => <ForgotContainer/>}/>\r\n            <Route path={`${SET_NEW_PASS_PATH}/:resetToken?`} render={() => <SetNewPassContainer/>}/>\r\n            <Route path={PROFILE_PATH} render={() => <Profile/>}/>\r\n            <Route path={PACKS_PATH} render={() => <Packs/>}/>\r\n            <Route path={`${CARDS_PATH}/:packId?`} render={() => <Cards/>}/>\r\n            <Redirect exact path={'/'} to={SIGN_IN_PATH}/>\r\n            <Route path={'*'} render={() => <h2> 404 ERROR PAGE NOT FOUND</h2>}/>\r\n        </Switch>\r\n    )\r\n};","import React from 'react';\r\nimport styles from './Header.module.scss';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {\r\n    SIGN_IN_PATH, SIGN_UP_PATH, FORGOT_PATH,\r\n    SET_NEW_PASS_PATH, PROFILE_PATH, PACKS_PATH\r\n} from '../Routes/Routes';\r\nimport {Button} from '../common/Button/Button';\r\nimport {setItemToLS} from '../../../features/Sign-In/LS-service/localStorage';\r\nimport {loginSuccess, setUserData} from '../../../features/Sign-In/BLL/signInReducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../BLL/store';\r\n\r\nexport const Header = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.signIn.isAuth);\r\n\r\n    const signOut = () => {\r\n        setItemToLS('token', null);\r\n        dispatch(setUserData(null));\r\n        dispatch(loginSuccess(false));\r\n    };\r\n\r\n    return (\r\n        <header className={styles.header}>\r\n            <nav className={styles.navMenu}>\r\n                <NavLink to={SIGN_IN_PATH} activeClassName={styles.active}>Sign In</NavLink>\r\n                <NavLink to={SIGN_UP_PATH} activeClassName={styles.active}>Sign Up</NavLink>\r\n                <NavLink to={FORGOT_PATH} activeClassName={styles.active}>Forgot</NavLink>\r\n                <NavLink to={SET_NEW_PASS_PATH} activeClassName={styles.active}>Set New Password</NavLink>\r\n                <NavLink to={PROFILE_PATH} activeClassName={styles.active}>Profile</NavLink>\r\n                <NavLink to={PACKS_PATH} activeClassName={styles.active}>Packs</NavLink>\r\n            </nav>\r\n            {\r\n                isAuth && <div className={styles.signOut}>\r\n                    <Button title={'Sign Out'} onClick={signOut}/>\r\n                </div>\r\n            }\r\n        </header>\r\n    )\r\n};","import React from 'react';\r\nimport './App.css';\r\nimport {Header} from './main/UI/Header/Header';\r\nimport {Routes} from './main/UI/Routes/Routes';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Routes/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Message during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport {SingUpReducer} from '../../features/Sign-Up/BLL/SignUpReducer';\r\nimport { signInReducer } from '../../features/Sign-In/BLL/signInReducer';\r\nimport {forgotReducer} from '../../features/Forgot/BLL/forgotReducer';\r\nimport {setNewPassReducer} from '../../features/Set-New-Pass/BLL/setNewPassReducer';\r\nimport { appReducer } from './appReducer';\r\nimport {packsReducer} from '../../features/Packs/BLL/packsReducer';\r\nimport {cardsReducer} from '../../features/Cards/BLL/cardsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    signUp: SingUpReducer,\r\n    signIn: signInReducer,\r\n    forgot: forgotReducer,\r\n    setNewPass: setNewPassReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport { store } from './main/BLL/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HashRouter>\r\n          <Provider store={store}>\r\n              <App />\r\n          </Provider>\r\n      </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
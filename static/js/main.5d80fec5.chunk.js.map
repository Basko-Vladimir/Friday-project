{"version":3,"sources":["main/UI/Header/Header.module.scss","main/UI/common/Paginator/Paginator.module.scss","main/UI/common/Table/Table.module.scss","features/Learn/UI/Learn.module.scss","main/UI/common/Modal Windows/Modal/Modal.module.scss","features/Sign-In/UI/SignIn.module.scss","main/UI/common/LoadingToggle/Loading.module.scss","features/Sign-Up/UI/SignUp.module.scss","main/UI/common/Search/Search.module.scss","main/UI/common/NewInput/NewInput.module.scss","main/UI/common/Button/Button.module.scss","main/UI/common/Input/Input.module.css","features/Set-New-Pass/UI/SetNewPass.module.scss","features/Forgot/UI/Forgot.module.scss","main/UI/common/Table/ColumnsHeaders/ColumnsHeaders.module.scss","main/UI/common/Modal Windows/DeleteItemModal/DeleteCardModal.module.scss","features/Sign-In/DAL/signInAPI.ts","features/Sign-In/LS-service/localStorage.ts","main/BLL/appReducer.ts","features/Sign-Up/BLL/SignUpTypes.ts","features/Sign-Up/DAL/SignUpAPI.ts","features/Sign-Up/BLL/SignUpReducer.ts","features/Sign-In/BLL/signInReducer.ts","main/UI/common/NewInput/NewInput.tsx","main/UI/common/Button/Button.tsx","main/UI/common/Modal Windows/Modal/Modal.tsx","main/UI/common/Modal Windows/MessageModal/MessageModal.tsx","features/Sign-In/UI/SignIn.tsx","main/UI/common/LoadingToggle/Loading.tsx","features/Sign-In/UI/SignInContainer.tsx","main/UI/common/Input/Input.tsx","features/Sign-Up/UI/SignUp.tsx","features/Set-New-Pass/UI/SetNewPass.tsx","features/Set-New-Pass/DAL/setNewPassAPI.ts","features/Set-New-Pass/BLL/setNewPassReducer.ts","features/Set-New-Pass/UI/SetNewPassContainer.tsx","features/Profile/Profile.tsx","features/Forgot/UI/Forgot.tsx","features/Forgot/DAL/forgotAPI.ts","features/Forgot/BLL/forgotReducer.ts","features/Forgot/UI/ForgotContainer.tsx","main/UI/common/Table/ColumnsHeaders/ColumnsHeaders.tsx","main/UI/common/Table/Table.tsx","features/Packs/DAL/packsAPI.ts","features/Packs/BLL/packsReducer.ts","main/UI/common/Search/Search.tsx","main/UI/common/Paginator/Paginator.tsx","features/Packs/UI/AddPackModal/AddPackModal.tsx","features/Packs/UI/ChangePackModal/ChangePackModal.tsx","main/UI/common/Modal Windows/DeleteItemModal/DeleteCardModal.tsx","features/Packs/UI/Packs.tsx","features/Cards/DAL/cardsAPI.ts","features/Cards/BLL/cardsReducer.ts","features/Cards/UI/AddCardModal/AddCardModal.tsx","features/Cards/UI/ChangeCardModal/ChangeCardModal.tsx","features/Cards/UI/Cards.tsx","features/Learn/DAL/learnAPI.ts","features/Learn/BLL/learnReducer.ts","features/Learn/UI/Learn.tsx","main/UI/Routes/Routes.tsx","main/UI/Header/Header.tsx","App.tsx","serviceWorker.ts","main/BLL/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","authAPI","email","password","rememberMe","post","then","res","data","token","setItemToLS","key","value","localStorage","setItem","JSON","stringify","getItemFromLS","getItem","parse","SET_MESSAGE_TEXT","initialState","message","setMessageText","messageText","type","SIGN_UP_ERROR","IS_LOADING","SignUpAPI","a","response","isLoading","signUpSuccess","SignUpError","errorMessage","SET_USER_DATA","LOGIN_SUCCESS","isAuth","userData","setUserData","loginSuccess","setAuthMe","dispatch","NewInput","React","memo","error","onChangeHandler","onChange","props","className","styles","input","e","currentTarget","Button","title","button","Modal","modalSize","isResponseError","children","isShow","hideModal","modalClass","modal","background","onClick","style","MessageModal","actionCreator","useDispatch","closeMessage","useCallback","Boolean","SignIn","isRemember","changePass","changeEmail","changeIsRemember","sendFormData","onSubmit","form","placeholder","to","FORGOT_PATH","forgotLink","checkbox","checked","SIGN_UP_PATH","Loading","useState","points","setPoints","useSelector","state","signUp","useEffect","id","setTimeout","length","clearTimeout","s","body","hide","loadingProgress","SignInContainer","app","setEmail","setPassword","setIsRemember","preventDefault","login","PROFILE_PATH","Input","changeInput","SignUp","firstPass","secondPass","setFirstPass","setLogin","setSecondPass","registerMe","similar","wrongPassword","responseMessage","container","inputs","SignUpContainer","setSimilar","SIGN_IN_PATH","success","SetNewPass","passwordRepeat","sendNewPassword","changePassword","changePasswordRepeat","setNewPassAPI","resetPasswordToken","SET_NEW_PASS_SUCCESS","newPassSuccess","SetNewPassContainer","redirect","setRedirect","setPasswordRepeat","setNewPass","resetToken","useParams","isSuccess","setNewPassword","Profile","signIn","firstRendering","setFirstRendering","created","String","isAdmin","name","publicCardPacksCount","tokenDeathTime","updated","verified","__v","_id","Forgot","sendEmail","forgotAPI","html1","html2","SET_FORGOT_SUCCESS","forgotSuccess","ForgotContainer","forgot","onSendEmail","ColumnsHeaders","sortInc","setSort","sortDirection","columnsHeaders","getItems","showModal","onSetSort","property","textContent","replace","typeSort","toLowerCase","innerHTML","headers","map","header","i","btnStyle","width","Table","rows","tableModel","table","row","CARDS_PATH","grade","buttonColumn","user_id","LEARN","question","answer","packsAPI","sortParams","pageCount","page","get","packName","cardsPack","packId","newName","put","idPack","delete","SET_PACKS","UPDATE_PACK","SET_NEW_PAGE","packs","setPacks","getPacks","packsData","cardPacks","Search","setQuery","searchQuery","toSearch","toReset","searchArea","marginRight","SearchContainer","setSearchQuery","result","filter","match","RegExp","Paginator","currentPage","setPage","disableLeftBtn","disableRightBtn","lastPage","b4Call","b1Call","b1","b2","b3","b4","showSpan","arrowsCall","arrow","disabled","toString","PaginatorContainer","btns","setBtns","btns2","setBtns2","setShowSpan","setIsB4","setIsB1","setDisableLeftBtn","setDisableRightBtn","btn","newPage","getPacksNew","dir","AddPackModal","modalType","addPack","setName","autoFocus","ChangePackModal","onChangePack","currentPackName","DeleteItemModal","deleteItem","buttonsBlock","Packs","currentPackId","setCurrentPackId","setCurrentPackName","setModalType","ownerId","creatorId","onGetPacks","newPack","updatedCardsPack","changePack","onAddPack","onDeletePack","deletePack","display","flexDirection","alignItems","cardsAPI","card","cardsPack_id","cardId","SET_CARDS","UPDATE_CARD","cards","updateCardAC","newCard","getCards","cardsData","AddCardModal","addCard","setQuestion","setAnswer","height","marginBottom","ChangeCardModal","changeCard","currentQuestion","currentAnswer","Cards","currentCardId","setCurrentCardId","setCurrentQuestion","setCurrentAnswer","cardCreatorId","console","log","onGetCards","onChangeCard","updatedCard","onAddCard","onDeleteCard","deletedCard","deleteCard","learnAPI","card_id","UPDATE_GRADE","updateGrade","Learn","show","setShow","currentCard","doAnswer","isClicked","clickedStyle","visible","hidden","answers","nextBtnContainer","LearnContainer","params","firstRender","setFirstRender","setNewGrade","setIsClicked","backgroundColor","Routes","path","render","exact","Header","navMenu","activeClassName","active","signOut","App","window","location","hostname","rootReducer","combineReducers","action","p","c","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5d80fec5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__d8TJ1\",\"navMenu\":\"Header_navMenu__XmOBE\",\"active\":\"Header_active__3NrMy\",\"signOut\":\"Header_signOut__uE1AS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Paginator_container__-8AIP\",\"arrow\":\"Paginator_arrow__afc1Q\",\"button\":\"Paginator_button__54szc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3fQUw\",\"headers\":\"Table_headers__17WSi\",\"rows\":\"Table_rows__1I5AT\",\"row\":\"Table_row__1tWSm\",\"buttonColumn\":\"Table_buttonColumn__3bNaJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Learn_container__1_FDh\",\"hidden\":\"Learn_hidden__3fyiA\",\"body\":\"Learn_body__2jv2s\",\"answers\":\"Learn_answers__2iS5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Modal_background__34Yuv\",\"modal\":\"Modal_modal__22ooa\",\"error\":\"Modal_error__17J5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SignIn_form__o7Htx\",\"checkbox\":\"SignIn_checkbox__3Ub6U\",\"background\":\"SignIn_background__11NxE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Loading_body__5qWIK\",\"loadingProgress\":\"Loading_loadingProgress__149ZI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SignUp_container__29LBU\",\"inputs\":\"SignUp_inputs__1TLkz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Search_container__7ghzK\",\"searchArea\":\"Search_searchArea__38Whk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewInput_input__2Agb1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2gVcE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3ZTlA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SetNewPass_form__JPazo\",\"background\":\"SetNewPass_background__1F51k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Forgot_form__2ccYz\",\"background\":\"Forgot_background__3Hif5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headers\":\"ColumnsHeaders_headers__3lseU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsBlock\":\"DeleteCardModal_buttonsBlock__txJhX\"};","import axios from 'axios';\r\nimport {UserDataType} from '../types/ResponseSuccessTypes';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0'\r\n});\r\n\r\n\r\nexport const authAPI = {\r\n    login (email: string, password: string, rememberMe: boolean = false ) {\r\n        return instance.post<UserDataType>('/auth/login', {email, password, rememberMe})\r\n            .then(res => res.data)\r\n    },\r\n\r\n    authMe (token: string) {\r\n       return instance.post<UserDataType>('/auth/me', {token})\r\n            .then(res => res.data);\r\n    }\r\n};\r\n","\r\n\r\nexport const setItemToLS = (key: string, value: any) => {\r\n   localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nexport const getItemFromLS= (key: string): string | undefined => {\r\n    const value = localStorage.getItem(key);\r\n    if (value) return JSON.parse(value);\r\n};","import {IsLoadingACType} from '../../features/Sign-Up/BLL/SignUpTypes';\r\n\r\nconst SET_MESSAGE_TEXT = 'cards/signInReducer/SET_MESSAGE_TEXT';\r\n\r\nconst initialState = {\r\n    message: ''\r\n};\r\n\r\nexport type StateType = typeof initialState;\r\ntype ActionsType = SetMessageTextType | IsLoadingACType;\r\n\r\nexport const appReducer = (state: StateType = initialState, action: ActionsType): StateType => {\r\n    switch (action.type) {\r\n        case SET_MESSAGE_TEXT:\r\n            return {\r\n                ...state,\r\n                message: action.messageText\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport type SetMessageTextType = ReturnType<typeof setMessageText>;\r\nexport const setMessageText = (messageText: string) => ({type: SET_MESSAGE_TEXT, messageText} as const);\r\n\r\n\r\n","import React from \"react\";\r\n\r\n\r\nexport const SIGN_UP_SUCCESS = 'SignUpReducer/SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_ERROR = 'SignUpReducer/SIGN_UP_ERROR';\r\nexport const IS_LOADING = 'SignUpReducer/IS_LOADING';\r\n\r\n// Типизация SignUp.tsx\r\nexport type SignUpPropsType = {\r\n    login: string\r\n    setLogin: (value: string) => void\r\n    firstPass: string\r\n    setFirstPass: (value: string) => void\r\n    secondPass: string\r\n    setSecondPass: (value: string) => void\r\n    similar: boolean\r\n    registerMe: (e: React.MouseEvent) => void\r\n    responseMessage: string\r\n    wrongPassword: (e: React.MouseEvent) => void\r\n    isLoading: (value: boolean) => IsLoadingACType\r\n}\r\n\r\n\r\n\r\nexport type SignUpSuccessType = {\r\n    type: typeof SIGN_UP_SUCCESS\r\n    signUpSuccess: boolean\r\n}\r\nexport type SignUpErrorType = {\r\n    type: typeof SIGN_UP_ERROR\r\n    errorMessage: string\r\n}\r\nexport type IsLoadingACType = {\r\n    type: typeof IS_LOADING\r\n    value: boolean\r\n}\r\n\r\n\r\n\r\n\r\nexport type ChatActionTypes = SignUpSuccessType | SignUpErrorType | IsLoadingACType","import axios from \"axios\";\r\n\r\nexport const baseURL = 'https://cards-nya-back.herokuapp.com/1.0/';\r\n\r\nexport const instance = axios.create({\r\n    baseURL\r\n});\r\n\r\nexport type SignUpType =  {\r\n    success: boolean\r\n    error: string\r\n}\r\n\r\nexport const SignUpAPI = {\r\n    SignUpAPI: async (email: string, password: string) => {\r\n        const response = await instance.post<SignUpType>('/auth/register', {email, password});\r\n        return response.data;\r\n    }\r\n\r\n};","import {\r\n    ChatActionTypes, IS_LOADING,\r\n    IsLoadingACType,\r\n    SIGN_UP_ERROR,\r\n    SIGN_UP_SUCCESS,\r\n    SignUpErrorType,\r\n    SignUpSuccessType\r\n} from \"./SignUpTypes\";\r\nimport {Dispatch} from \"redux\";\r\nimport {SignUpAPI} from \"../DAL/SignUpAPI\";\r\n\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    message: '',\r\n    signUpSuccess: false\r\n};\r\n\r\ntype StateType = typeof initialState;\r\n\r\nexport const SingUpReducer = (state: StateType = initialState, action: any): StateType => {\r\n    switch (action.type) {\r\n        case SIGN_UP_SUCCESS:\r\n            return {...state, message: 'done!', signUpSuccess: action.signUpSuccess};\r\n        case SIGN_UP_ERROR:\r\n            return {...state, message: action.errorMessage};\r\n        case IS_LOADING:\r\n            return {\r\n                ...state, isLoading: action.value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n// Action Creators\r\nexport const isLoading = (value: boolean):IsLoadingACType => ({type: IS_LOADING, value});\r\n\r\nconst SignUpSuccess = (signUpSuccess: boolean)\r\n    : SignUpSuccessType => ({type: SIGN_UP_SUCCESS, signUpSuccess});\r\nexport const SignUpError = (errorMessage: string)\r\n    : SignUpErrorType => ({type: SIGN_UP_ERROR, errorMessage});\r\n\r\n// Thunks\r\n\r\nexport const signUpTC = (email:string, password:string) =>\r\n    async(dispatch: Dispatch<ChatActionTypes>)  => {\r\n    debugger\r\n        try {\r\n            dispatch(isLoading(true));\r\n            const data = await SignUpAPI.SignUpAPI(email, password);\r\n            if(data.error) {\r\n                dispatch(SignUpError(data.error));\r\n            } else\r\n                dispatch(SignUpSuccess(data.success))\r\n        } catch (e) {\r\n            dispatch(SignUpError(e.response.data.error))\r\n        }\r\n        dispatch(isLoading(false));\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n","import {Dispatch} from 'redux';\r\nimport {authAPI} from '../DAL/signInAPI';\r\nimport {UserDataType} from '../types/ResponseSuccessTypes';\r\nimport {ThunkAction} from 'redux-thunk';\r\nimport {AppStateType} from '../../../main/BLL/store';\r\nimport {setItemToLS} from '../LS-service/localStorage';\r\nimport {SetMessageTextType, setMessageText} from '../../../main/BLL/appReducer';\r\nimport {isLoading} from '../../Sign-Up/BLL/SignUpReducer';\r\nimport {IsLoadingACType} from '../../Sign-Up/BLL/SignUpTypes';\r\n\r\nconst SET_USER_DATA = 'cards/signInReducer/SET_USER_DATA';\r\nconst LOGIN_SUCCESS = 'cards/signInReducer/LOGIN_SUCCESS';\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    userData: null as UserDataType | null,\r\n};\r\n\r\nexport type StateType = typeof initialState;\r\n\r\nexport const signInReducer = (state: StateType = initialState, action: ActionsTypes): StateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                userData: action.userData\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype ActionsTypes = SetUserDataType | LoginSuccessType | SetMessageTextType | IsLoadingACType;\r\n\r\nexport type SetUserDataType = ReturnType<typeof setUserData>\r\nexport const setUserData = (userData: UserDataType | null) => ({type: SET_USER_DATA, userData} as const);\r\n\r\ntype LoginSuccessType = ReturnType<typeof loginSuccess>;\r\nexport const loginSuccess = (isAuth: boolean) => ({type: LOGIN_SUCCESS, isAuth} as const);\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\r\n\r\nexport const login = (email: string, password: string, isRemember: boolean): ThunkType => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(isLoading(true));\r\n            const data = await authAPI.login(email, password, isRemember);\r\n            setItemToLS('token', data.token);\r\n            dispatch(setUserData({...data}));\r\n            dispatch(loginSuccess(true));\r\n        } catch (err) {\r\n            dispatch(setMessageText(err.response.data.error))\r\n        } finally {\r\n            dispatch(isLoading(false));\r\n        }\r\n    };\r\n};\r\n\r\nexport const setAuthMe = (token: string) => async (dispatch: Dispatch<ActionsTypes>) => {\r\n     try {\r\n        dispatch(isLoading(true));\r\n        dispatch(loginSuccess(true));\r\n        const data = await authAPI.authMe(token);\r\n        setItemToLS('token', data.token);\r\n        dispatch(setUserData({...data}));\r\n        return data\r\n    } catch (err) {\r\n        dispatch(loginSuccess(false));\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};\r\n\r\n\r\n\r\n","import React, {InputHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react';\r\nimport styles from './NewInput.module.scss';\r\n\r\nexport type InputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement> & { error?: string, onChangeHandler?: (value: string) => void }\r\n\r\nexport const NewInput: React.FC<InputPropsType> = React.memo(({error, onChangeHandler, onChange,  ...props}) => {\r\n\r\n   const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n       onChangeHandler && onChangeHandler(e.currentTarget.value);\r\n       onChange && onChange(e)\r\n   };\r\n    return (\r\n        <>\r\n            <input className={styles.input} onChange={onChangeCallback} {...props}/>\r\n            {error && <span>{error}</span>}\r\n        </>\r\n    )\r\n});\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport styles from './Button.module.scss';\r\n\r\nexport type ButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>,\r\n    HTMLButtonElement> & { title: string | number };\r\n\r\nexport const Button: React.FC<ButtonPropsType> = React.memo(({title, ...props}) => {\r\n    return (\r\n        <div>\r\n            <button className={styles.button} {...props}>{title}</button>\r\n        </div>\r\n    )\r\n});\r\n","import React from 'react';\r\nimport styles from './Modal.module.scss';\r\n\r\ntype ModalPropsType = {\r\n    modalSize?: { width: string, height: string}\r\n    isResponseError?: boolean\r\n    children: React.ReactNode\r\n    isShow: boolean\r\n    hideModal?: () => void\r\n}\r\n\r\nexport const Modal = React.memo((props:ModalPropsType) => {\r\n    const {modalSize, isResponseError, children, isShow, hideModal} = props;\r\n    const modalClass = isResponseError ? `${styles.modal} ${styles.error} ` : styles.modal;\r\n\r\n    if (!isShow) return null;\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.background} onClick={hideModal}> </div>\r\n            <div className={modalClass} style={modalSize}>\r\n                {children}\r\n            </div>\r\n        </>\r\n\r\n    )\r\n});","import React, {useCallback} from 'react';\r\nimport {Button} from '../../Button/Button';\r\nimport {useDispatch} from 'react-redux';\r\nimport {SetMessageTextType} from '../../../../BLL/appReducer';\r\nimport {Modal} from '../Modal/Modal';\r\n\r\ntype MessageModalPropsType = {\r\n    messageText: string\r\n    isResponseError: boolean\r\n    actionCreator: SetMessageTextType\r\n}\r\n\r\nexport const MessageModal: React.FC<MessageModalPropsType> = React.memo((props) => {\r\n    const {messageText, isResponseError, actionCreator} = props;\r\n    const dispatch = useDispatch();\r\n\r\n    const closeMessage = useCallback(() => {\r\n        dispatch(actionCreator)\r\n    }, [dispatch, actionCreator]);\r\n\r\n    return <>\r\n        <Modal isResponseError={isResponseError} isShow={Boolean(messageText)}>\r\n            <h3>{messageText}</h3>\r\n            <Button title={'Close'} onClick={closeMessage}/>\r\n        </Modal>\r\n    </>\r\n});\r\n\r\n\r\n","import React, {ChangeEvent, FormEvent} from 'react';\r\nimport styles from './SignIn.module.scss';\r\nimport {NewInput} from '../../../main/UI/common/NewInput/NewInput';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {FORGOT_PATH, SIGN_UP_PATH} from '../../../main/UI/Routes/Routes';\r\nimport {Button} from '../../../main/UI/common/Button/Button';\r\nimport {MessageModal} from '../../../main/UI/common/Modal Windows/MessageModal/MessageModal';\r\nimport {setMessageText} from '../../../main/BLL/appReducer';\r\n\r\ntype SignInPropsType = {\r\n    email: string\r\n    password: string\r\n    isRemember: boolean\r\n    messageText: string\r\n    changeEmail: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changePass: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeIsRemember: (e: ChangeEvent<HTMLInputElement>) => void\r\n    sendFormData: (e: FormEvent<HTMLFormElement>) => void\r\n}\r\n\r\nexport const SignIn: React.FC<SignInPropsType> = React.memo((props) => {\r\n    const {\r\n        email, password, isRemember, messageText, changePass,\r\n        changeEmail, changeIsRemember, sendFormData\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <h1>Sign In</h1>\r\n            <form onSubmit={sendFormData} className={styles.form}>\r\n                <NewInput type={'text'} placeholder={'Enter your e-mail'}\r\n                          onChange={changeEmail} value={email}/>\r\n                <NewInput type={'password'} placeholder={'Enter your password'}\r\n                          onChange={changePass} value={password}/>\r\n                <NavLink to={FORGOT_PATH} className={styles.forgotLink}>Forgot password?</NavLink>\r\n                <label>\r\n                    <NewInput type={'checkbox'} className={styles.checkbox}\r\n                              onChange={changeIsRemember} checked={isRemember}/>Remember Me\r\n                </label>\r\n                <Button title={'Sign in'}/>\r\n                <NavLink to={SIGN_UP_PATH}>Registration</NavLink>\r\n                {\r\n                    messageText && <MessageModal messageText={messageText} isResponseError={true}\r\n                                            actionCreator={setMessageText('')}/>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n});","import React, {useEffect, useState} from 'react';\r\nimport s from './Loading.module.scss'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../BLL/store\";\r\n\r\n\r\nconst Loading = () => {\r\n    let [points, setPoints] = useState<string>('.');\r\n    let isLoading = useSelector((state: AppStateType) => state.signUp.isLoading);\r\n\r\n    useEffect(( ) => {\r\n        const id = setTimeout(() => {\r\n            points.length < 5\r\n                ? setPoints(points + '.')\r\n                : setPoints('.')\r\n        }, 1000);\r\n        return ( ) => {\r\n            clearTimeout(id)\r\n        }\r\n    }, [setPoints,  points]);\r\n\r\n    // const loadingProgress = () => {\r\n    //     setTimeout(() => {\r\n    //         points.length < 5\r\n    //             ? setPoints(points + '.')\r\n    //             : setPoints('.')\r\n    //     }, 1000);\r\n    //     return points\r\n    // };\r\n    return (\r\n        <div className={isLoading ? s.body : s.hide}>\r\n            <span className={s.loadingProgress}>\r\n                {/*{isLoading && 'Loading' + loadingProgress()}   // Здесь заменил loadingProgress() на points*/}\r\n                {isLoading && 'Loading' + points}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React, {ChangeEvent, FormEvent, useCallback, useState} from 'react';\r\nimport {PROFILE_PATH} from '../../../main/UI/Routes/Routes';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {login,} from '../BLL/signInReducer';\r\nimport {AppStateType} from '../../../main/BLL/store';\r\nimport {SignIn} from './SignIn';\r\nimport Loading from '../../../main/UI/common/LoadingToggle/Loading';\r\nimport {getItemFromLS} from '../LS-service/localStorage';\r\n\r\nexport const SignInContainer = React.memo(() => {\r\n    const messageText = useSelector<AppStateType, string>(state => state.app.message);\r\n    // const isAuth = useSelector<AppStateType, boolean>(state => state.signIn.isAuth);\r\n    const isLoading = useSelector<AppStateType, boolean>(state => state.signUp.isLoading);\r\n    const token = getItemFromLS('token');\r\n\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [isRemember, setIsRemember] = useState<boolean>(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const changeEmail = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }, [setEmail]);\r\n\r\n    const changePass = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }, [setPassword]);\r\n\r\n    const changeIsRemember = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setIsRemember(e.currentTarget.checked)\r\n    }, [setIsRemember]);\r\n\r\n    const sendFormData = useCallback((e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password, isRemember));\r\n        setEmail('');\r\n        setPassword('');\r\n        setIsRemember(false);\r\n    }, [dispatch, email, password, isRemember]);\r\n\r\n    if (token) return <Redirect to={PROFILE_PATH}/>;\r\n\r\n    return <>\r\n        <SignIn email={email} password={password} isRemember={isRemember}\r\n                changeEmail={changeEmail} changePass={changePass} messageText={messageText}\r\n                changeIsRemember={changeIsRemember} sendFormData={sendFormData}/>\r\n        {isLoading && <Loading/>}\r\n    </>\r\n});\r\n\r\n","import React, {InputHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react';\r\nimport styles from './Input.module.css';\r\n\r\nexport type InputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement> & { error?: string, value?: string, changeInput?: (e:ChangeEvent<HTMLInputElement>) => void }\r\n\r\nexport const Input: React.FC<InputPropsType> = ({error, value, changeInput, ...props}) => {\r\n    return (\r\n        <>\r\n            <input className={styles.input} {...props} value={value} onChange={changeInput} />\r\n            {error && <span>{error}</span>}\r\n        </>\r\n    )\r\n};\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {Input} from '../../../main/UI/common/Input/Input';\r\nimport {Button} from '../../../main/UI/common/Button/Button';\r\nimport s from './SignUp.module.scss';\r\nimport {AppStateType} from \"../../../main/BLL/store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {isLoading, SignUpError, signUpTC} from \"../BLL/SignUpReducer\";\r\nimport Loading from \"../../../main/UI/common/LoadingToggle/Loading\";\r\nimport {SignUpPropsType} from \"../BLL/SignUpTypes\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {SIGN_IN_PATH} from \"../../../main/UI/Routes/Routes\";\r\n\r\n\r\n\r\n\r\nexport const SignUp: React.FC<SignUpPropsType> = ({login, firstPass,\r\n                                                      secondPass,\r\n                                                      setFirstPass, setLogin, setSecondPass,\r\n                                                      registerMe, similar,\r\n                                                      wrongPassword, responseMessage, isLoading}) => {\r\n    const setEmailCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLogin(e.currentTarget.value)\r\n    };\r\n    const setPassCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setFirstPass(e.currentTarget.value)\r\n    };\r\n    const setConfirmPassCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSecondPass(e.currentTarget.value)\r\n    };\r\n    return (\r\n        <div className={s.container}>\r\n            <h1>Sign Up</h1>\r\n\r\n            <div className={s.inputs}>\r\n                <Input placeholder={'Enter Your email'} changeInput={setEmailCallback}\r\n                        type='text' value={login}\r\n                />\r\n                <Input placeholder={'Enter Your Password'} changeInput={setPassCallback}\r\n                        type='password' value={firstPass}\r\n                />\r\n                <Input placeholder={'Confirm Your password'} changeInput={setConfirmPassCallback}\r\n                        type='password' value={secondPass}\r\n                /> {!similar && <span>password does not match!</span>}\r\n            </div>\r\n\r\n            <Button title={'Sign Up'} onClick={similar? registerMe : wrongPassword} />\r\n            {isLoading && <Loading/>}\r\n            {<span>{responseMessage}</span>}\r\n        </div>\r\n    )\r\n};\r\nexport const SignUpContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const {signUpSuccess, message} = useSelector((state: AppStateType) => state.signUp);\r\n    const [login, setLogin] = useState('');\r\n    const [similar, setSimilar] = useState<boolean>(false);\r\n    const [firstPass, setFirstPass] = useState<string>('');\r\n    const [secondPass, setSecondPass] = useState<string>('');\r\n    useEffect(() => {\r\n        if (secondPass === firstPass && secondPass) setSimilar(true);\r\n        else setSimilar(false)\r\n    }, [secondPass, firstPass]);\r\n    const registerMe = () => {\r\n        dispatch(signUpTC(login, firstPass))\r\n    };\r\n    const wrongPassword = () => {\r\n        dispatch(SignUpError('wrong credentials'))\r\n    };\r\n\r\n    return(\r\n        <>\r\n            { !signUpSuccess ?\r\n                <SignUp login={login} setLogin={setLogin}\r\n                    firstPass={firstPass} setFirstPass={setFirstPass}\r\n                    secondPass={secondPass} setSecondPass={setSecondPass}\r\n                    similar={similar} registerMe={registerMe}\r\n                    responseMessage={message} wrongPassword={wrongPassword}\r\n                    isLoading={isLoading}\r\n            />\r\n            : <Redirect to={SIGN_IN_PATH}/>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n","import React, {ChangeEvent, FormEvent} from 'react';\r\nimport styles from './SetNewPass.module.scss';\r\nimport {NewInput} from '../../../main/UI/common/NewInput/NewInput';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {SIGN_IN_PATH} from '../../../main/UI/Routes/Routes';\r\nimport {Button} from '../../../main/UI/common/Button/Button';\r\nimport {MessageModal} from '../../../main/UI/common/Modal Windows/MessageModal/MessageModal';\r\nimport {setMessageText} from '../../../main/BLL/appReducer';\r\n\r\ntype SetNewPassPropsType = {\r\n    password: string\r\n    passwordRepeat: string\r\n    sendNewPassword: (e: FormEvent<HTMLFormElement>) => void\r\n    changePassword: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changePasswordRepeat: (value: string) => void\r\n    messageText: string\r\n    isResponseError: boolean\r\n}\r\n\r\nexport const SetNewPass: React.FC<SetNewPassPropsType> = React.memo( (props) => {\r\n    const {password, passwordRepeat, sendNewPassword, changePassword,\r\n        changePasswordRepeat, messageText, isResponseError} = props;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Set New Password</h1>\r\n            <form className={styles.form} onSubmit={sendNewPassword}>\r\n                <NewInput value={password} placeholder={'Enter new password'}\r\n                          onChange={changePassword} type={'password'}/>\r\n                <NewInput value={passwordRepeat} placeholder={'Repeat password'}\r\n                          onChangeHandler={changePasswordRepeat} type={'password'}/>\r\n                <NavLink to={SIGN_IN_PATH}>Sign In</NavLink>\r\n                <Button title={'Set password'}/>\r\n            </form>\r\n            {\r\n                messageText && <MessageModal messageText={messageText} isResponseError={isResponseError}\r\n                                        actionCreator={setMessageText('')} />\r\n            }\r\n        </div>\r\n    )\r\n});","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0'\r\n});\r\n\r\n\r\nexport const setNewPassAPI = {\r\n    setNewPass (password: string, resetPasswordToken: string = '') {\r\n        return instance.post<{success: boolean}>('/auth/set-new-password', {password, resetPasswordToken})\r\n            .then(res => res.data)\r\n    }\r\n};","import { Dispatch } from \"redux\";\r\nimport {setNewPassAPI} from '../DAL/setNewPassAPI';\r\nimport { setMessageText } from \"../../../main/BLL/appReducer\";\r\nimport {isLoading} from '../../Sign-Up/BLL/SignUpReducer';\r\n\r\nconst SET_NEW_PASS_SUCCESS = 'cards/setNewPassReducer/setNewPassReducer';\r\n\r\nconst initialState = {\r\n    newPassSuccess: false\r\n};\r\n\r\ntype StateType = typeof initialState;\r\n\r\nexport const setNewPassReducer = (state:StateType = initialState, action: setNewPassSuccessType): StateType => {\r\n    switch (action.type) {\r\n        case SET_NEW_PASS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                newPassSuccess: action.isSuccess\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype setNewPassSuccessType = ReturnType<typeof setNewPassSuccess>;\r\nconst setNewPassSuccess = (isSuccess: boolean) => ({type: SET_NEW_PASS_SUCCESS, isSuccess} as const);\r\n\r\nexport const setNewPassword = (password: string, token: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        await setNewPassAPI.setNewPass(password, token);\r\n        dispatch(setNewPassSuccess(true));\r\n        dispatch(setMessageText('Success! Password changed'));\r\n    } catch (err) {\r\n        dispatch(setMessageText(err.response.data.error));\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};","import React, {ChangeEvent, FormEvent, useCallback, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../main/BLL/store';\r\nimport {SetNewPass} from './SetNewPass';\r\nimport {useParams, Redirect} from 'react-router-dom';\r\nimport {setNewPassword} from '../BLL/setNewPassReducer';\r\nimport {setMessageText} from '../../../main/BLL/appReducer';\r\nimport Loading from '../../../main/UI/common/LoadingToggle/Loading';\r\nimport {SIGN_IN_PATH} from '../../../main/UI/Routes/Routes';\r\n\r\nexport const SetNewPassContainer = () => {\r\n    const [password, setPassword] = useState<string>('');\r\n    const [redirect, setRedirect] = useState<boolean>(false);\r\n    const [passwordRepeat, setPasswordRepeat] = useState<string>('');\r\n    const messageText = useSelector<AppStateType, string>(state => state.app.message);\r\n    const newPassSuccess = useSelector<AppStateType, boolean>(state => state.setNewPass.newPassSuccess);\r\n    const isLoading = useSelector<AppStateType, boolean>(state => state.signUp.isLoading);\r\n    const dispatch = useDispatch();\r\n    const {resetToken} = useParams();\r\n\r\n\r\n    const changePassword = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }, [setPassword]);\r\n\r\n    const changePasswordRepeat = useCallback((value: string) => {\r\n        setPasswordRepeat(value)\r\n    }, [setPasswordRepeat]);\r\n\r\n    const sendNewPassword = useCallback((e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (password === passwordRepeat) {\r\n            dispatch(setNewPassword(password, resetToken))\r\n        } else {\r\n            dispatch(setMessageText('Passwords doesn\\'t match'))\r\n        }\r\n        setPassword('');\r\n        setPasswordRepeat('');\r\n    }, [dispatch, password, passwordRepeat, resetToken]);\r\n\r\n    if (newPassSuccess) setTimeout(() => {\r\n        setRedirect(true)\r\n    }, 2000);\r\n\r\n    if (redirect) return <Redirect to={SIGN_IN_PATH}/>;\r\n\r\n    return <>\r\n        <SetNewPass password={password} passwordRepeat={passwordRepeat}\r\n                    sendNewPassword={sendNewPassword} changePassword={changePassword}\r\n                    changePasswordRepeat={changePasswordRepeat} messageText={messageText}\r\n                    isResponseError={!newPassSuccess}/>\r\n        {isLoading && <Loading/>}\r\n    </>\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../main/BLL/store';\r\nimport {UserDataType} from '../Sign-In/types/ResponseSuccessTypes';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {SIGN_IN_PATH} from '../../main/UI/Routes/Routes';\r\nimport {getItemFromLS} from '../Sign-In/LS-service/localStorage';\r\nimport {setAuthMe} from '../Sign-In/BLL/signInReducer';\r\nimport Loading from '../../main/UI/common/LoadingToggle/Loading';\r\n\r\nexport const Profile = () => {\r\n    const userData = useSelector<AppStateType, UserDataType | null>(state => state.signIn.userData);\r\n    const isLoading = useSelector<AppStateType, boolean>(state => state.signUp.isLoading);\r\n\r\n    const token = getItemFromLS('token');\r\n    const [firstRendering, setFirstRendering] = useState<boolean>(true);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (firstRendering && token) {\r\n            dispatch(setAuthMe(token));\r\n            setFirstRendering(false);\r\n        }\r\n    }, [dispatch, token, setFirstRendering, firstRendering]);\r\n\r\n\r\n    if (isLoading) return <Loading />;\r\n    if (!token) return <Redirect to={SIGN_IN_PATH}/>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile </h1>\r\n            <div><b>created:</b> {userData?.created}</div>\r\n            <div><b>email:</b> {userData?.email}</div>\r\n            <div><b>isAdmin:</b> {String(userData?.isAdmin)}</div>\r\n            <div><b>name:</b> {userData?.name}</div>\r\n            <div><b>publicCardPacksCount:</b> {userData?.publicCardPacksCount}</div>\r\n            <div><b>rememberMe:</b> {String(userData?.rememberMe)}</div>\r\n            <div><b>success:</b> {String(userData?.success)}</div>\r\n            <div><b>token:</b> {userData?.token}</div>\r\n            <div><b>tokenDeathTime:</b> {userData?.tokenDeathTime}</div>\r\n            <div><b>updated:</b> {userData?.updated}</div>\r\n            <div><b>verified:</b> {String(userData?.verified)}</div>\r\n            <div><b>__v:</b> {userData?.__v}</div>\r\n            <div><b>_id:</b> {userData?._id}</div>\r\n        </div>\r\n    )\r\n};","import React, {ChangeEvent, FormEvent} from 'react';\r\nimport styles from './Forgot.module.scss';\r\nimport {Button} from '../../../main/UI/common/Button/Button';\r\nimport {NewInput} from '../../../main/UI/common/NewInput/NewInput';\r\nimport {SIGN_IN_PATH} from '../../../main/UI/Routes/Routes';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {MessageModal} from '../../../main/UI/common/Modal Windows/MessageModal/MessageModal';\r\nimport { setMessageText } from '../../../main/BLL/appReducer';\r\n\r\ntype ForgotPropsType = {\r\n    email: string\r\n    messageText: string\r\n    isResponseError: boolean\r\n    changeEmail: (e: ChangeEvent<HTMLInputElement>) => void\r\n    sendEmail: (e: FormEvent<HTMLFormElement>) => void\r\n}\r\n\r\nexport const Forgot:React.FC<ForgotPropsType> = React.memo((props) => {\r\n    const {email, messageText, isResponseError, changeEmail, sendEmail} = props;\r\n    return (\r\n        <div>\r\n            <h1>Forgot</h1>\r\n            <form className={styles.form} onSubmit={sendEmail}>\r\n                <NewInput type={'text'} placeholder={'Enter your e-mail'}\r\n                          value={email} onChange={changeEmail}/>\r\n                <NavLink to={SIGN_IN_PATH}>Sign In</NavLink>\r\n                <Button title={'Send email'}/>\r\n            </form>\r\n            {\r\n                messageText && <MessageModal messageText={messageText} isResponseError={isResponseError}\r\n                                        actionCreator={setMessageText('')}/>\r\n            }\r\n        </div>\r\n    )\r\n});","import axios from 'axios';\r\nimport {ForgotSuccessType} from '../types/ResponseSuccessTypes';\r\n\r\nconst instance = axios.create({\r\n   baseURL: 'https://cards-nya-back.herokuapp.com/1.0'\r\n});\r\n\r\nexport const forgotAPI = {\r\n    sendEmail(email: string) {\r\n        return instance.post<ForgotSuccessType>('auth/forgot', {\r\n            email: email,\r\n            html1: \"<a href='http://localhost:3000/#/set-new-password/\",\r\n            html2: \"'>reset-password-link</a>\"\r\n        })\r\n            .then(res => res.data)\r\n    }\r\n};\r\n","import {Dispatch} from 'redux';\r\nimport {forgotAPI} from '../DAL/forgotAPI';\r\nimport {setMessageText, SetMessageTextType} from '../../../main/BLL/appReducer';\r\nimport {isLoading} from '../../Sign-Up/BLL/SignUpReducer';\r\nimport {IsLoadingACType} from '../../Sign-Up/BLL/SignUpTypes';\r\n\r\nconst SET_FORGOT_SUCCESS = 'cards/forgotReducer/SET_FORGOT_SUCCESS';\r\n\r\nconst initialState = {\r\n    forgotSuccess: false\r\n};\r\n\r\ntype StateType = typeof initialState;\r\n\r\nexport const forgotReducer = (state: StateType = initialState, action: SetForgotSuccessType): StateType => {\r\n    switch (action.type) {\r\n        case SET_FORGOT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                forgotSuccess: action.success\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype ActionsType = SetForgotSuccessType | SetMessageTextType | IsLoadingACType;\r\n\r\ntype SetForgotSuccessType = ReturnType<typeof setForgotSuccess>\r\nexport const setForgotSuccess = (success: boolean) => ({type: SET_FORGOT_SUCCESS, success} as const);\r\n\r\nexport const sendEmail = (email: string) => async (dispatch: Dispatch<ActionsType>) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        await forgotAPI.sendEmail(email);\r\n        dispatch(setForgotSuccess(true));\r\n        dispatch(setMessageText('Success! Check your email'))\r\n    } catch (err) {\r\n        dispatch(setMessageText(err.response.data.error))\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};","import React, {ChangeEvent, FormEvent, useCallback, useState} from 'react';\r\nimport {Forgot} from './Forgot';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {sendEmail} from '../BLL/forgotReducer';\r\nimport {AppStateType} from '../../../main/BLL/store';\r\nimport Loading from '../../../main/UI/common/LoadingToggle/Loading';\r\n\r\nexport const ForgotContainer = () => {\r\n    const [email, setEmail] = useState<string>('');\r\n    const messageText = useSelector<AppStateType, string>(state => state.app.message);\r\n    const forgotSuccess = useSelector<AppStateType, boolean>(state => state.forgot.forgotSuccess);\r\n    const isLoading = useSelector<AppStateType, boolean>(state => state.signUp.isLoading);\r\n    const dispatch = useDispatch();\r\n\r\n    const changeEmail = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }, [setEmail]);\r\n\r\n    const onSendEmail = useCallback((e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(sendEmail(email));\r\n        setEmail('');\r\n    }, [dispatch, email]);\r\n\r\n    return <>\r\n        <Forgot email={email} changeEmail={changeEmail} isResponseError={!forgotSuccess}\r\n                messageText={messageText} sendEmail={onSendEmail}/>\r\n        {isLoading && <Loading/>}\r\n    </>\r\n};","import React, {useState} from 'react';\r\nimport styles from './ColumnsHeaders.module.scss';\r\nimport {Button} from '../../Button/Button';\r\n\r\ntype HeadersPropsType = {\r\n    columnsHeaders: Array<string>\r\n    getItems: (sortParams: string) => void\r\n    showModal: (modalType: string) => void\r\n};\r\n\r\n\r\nexport const ColumnsHeaders: React.FC<HeadersPropsType> = React.memo((props) => {\r\n    const [sortInc, setSort] = useState<boolean>(false);\r\n    let sortDirection = '';\r\n\r\n    const {columnsHeaders, getItems, showModal} = props;\r\n\r\n    const onSetSort = (e: React.MouseEvent) => {\r\n        let property = e.currentTarget.textContent;\r\n        sortDirection = sortInc ? '&uarr;' : ' &darr;';\r\n        if (property) {\r\n            property = property.replace(/[^\\w]/g, '');\r\n            const typeSort = +sortInc + property.toLowerCase();\r\n            getItems(typeSort);\r\n        }\r\n        setSort(!sortInc);\r\n        e.currentTarget.innerHTML = `${property}  ${sortDirection}`\r\n    };\r\n\r\n    return (\r\n        <div className={styles.headers}>\r\n            {columnsHeaders.map((header, i) => {\r\n                    return i === columnsHeaders.length - 1\r\n                        ? <Button key={header} title={header} name={'add'}\r\n                                  onClick={(e) => showModal(e.currentTarget.name)}/>\r\n                        : <span key={header}>\r\n                            <b onClick={onSetSort}>{header}</b>\r\n                    </span>\r\n                }\r\n            )}\r\n        </div>\r\n    )\r\n});","import React from 'react';\r\nimport styles from './Table.module.scss';\r\nimport {Button} from '../Button/Button';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {CARDS_PATH, LEARN} from '../../Routes/Routes';\r\nimport {ColumnsHeaders} from './ColumnsHeaders/ColumnsHeaders';\r\nimport {CardItemType} from '../../../../features/Cards/types';\r\nimport {PackItemType} from '../../../../features/Packs/types';\r\n\r\ntype TablePropsType = {\r\n    columnsHeaders: Array<string>\r\n    rows: any\r\n    getItems: (sortParams: string) => void\r\n    tableModel: string\r\n    showModal: (modalType: string, id?: string, creatorId?: string, name?: string, question?: string, answer?: string) => void\r\n}\r\nconst btnStyle = {width: '80px'};\r\nexport const Table = React.memo(function (props: TablePropsType) {\r\n    const {columnsHeaders, rows, tableModel, getItems, showModal} = props;\r\n\r\n    return (\r\n        <div className={styles.table}>\r\n            <ColumnsHeaders columnsHeaders={columnsHeaders} getItems={getItems} showModal={showModal}/>\r\n            {\r\n                tableModel === 'packs'\r\n                    ? <div className={styles.rows}>\r\n                        {!rows.length && <span>Packs didn't create, yet</span>}\r\n                        {\r\n                            rows.map((row: PackItemType) => {\r\n                                return <div key={row._id} className={styles.row}>\r\n                                        <span>\r\n                                            <NavLink to={`${CARDS_PATH}/${row._id}`}>{row.name}</NavLink>\r\n                                        </span>\r\n                                    <span>{row.grade}</span>\r\n                                    <span className={styles.buttonColumn}>\r\n                                           <Button style={btnStyle} title={'Change'} name={'change'}\r\n                                                   onClick={(e) => showModal(e.currentTarget.name, row._id, row.user_id, row.name)}/>\r\n                                           <Button style={btnStyle} title={'Delete'} name={'delete'}\r\n                                                   onClick={(e) => showModal(e.currentTarget.name, row._id, row.user_id)}/>\r\n                                           <NavLink to={`${LEARN}/${row._id}`}><Button style={btnStyle} title={'Learn'} name={'learn'} /></NavLink>\r\n                                       </span>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                    : <div className={styles.rows}>\r\n                        {!rows.length && <span>Cards didn't create, yet</span>}\r\n                        {\r\n                            rows\r\n                                .map((row: CardItemType) => {\r\n                                    return <div key={row._id} className={styles.row}>\r\n                                        <span>{row.question}</span>\r\n                                        <span>{row.answer}</span>\r\n                                        <span>{row.grade}</span>\r\n                                        <span className={styles.buttonColumn}>\r\n                                           <Button title={'Change'} name={'change'}\r\n                                                   onClick={(e) => showModal(e.currentTarget.name, row._id, row.user_id, row.question, row.answer)}/>\r\n                                           <Button title={'Delete'} name={'delete'}\r\n                                                   onClick={(e) => showModal(e.currentTarget.name, row._id, row.user_id)}/>\r\n                                       </span>\r\n                                    </div>\r\n                                })\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n});\r\n","import axios from 'axios';\r\nimport {PacksType} from '../types';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0'\r\n});\r\n\r\nexport const packsAPI = {\r\n    getPacks (token: string, sortParams: string = '', pageCount: number = 4, page: number = 1 ) {\r\n        return instance.get<PacksType>(`/cards/pack?token=${token}&pageCount=${pageCount}&page=${page}&${sortParams}`)\r\n            .then(res => res.data)\r\n    },\r\n\r\n    addPack (token: string, packName: string) {\r\n        return instance.post('/cards/pack', {\r\n            cardsPack: {\r\n                name: packName,\r\n                grade: 0\r\n            },\r\n            token\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n\r\n    updatePack (packId: string, token: string, newName: string) {\r\n        return instance.put('/cards/pack', {\r\n            cardsPack: {\r\n                _id: packId,\r\n                name: newName\r\n            },\r\n            token\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n\r\n    deletePack (idPack: string, token: string | undefined) {\r\n        return instance.delete(`/cards/pack?token=${token}&id=${idPack}`)\r\n            .then(res => res.data)\r\n    }\r\n};","import {Dispatch} from 'redux';\r\nimport {packsAPI} from '../DAL/packsAPI';\r\nimport {PackItemType} from '../types';\r\nimport {setItemToLS} from '../../Sign-In/LS-service/localStorage';\r\nimport {setMessageText, SetMessageTextType} from '../../../main/BLL/appReducer';\r\nimport {isLoading} from '../../Sign-Up/BLL/SignUpReducer';\r\nimport {IsLoadingACType} from '../../Sign-Up/BLL/SignUpTypes';\r\nimport {ThunkAction} from 'redux-thunk';\r\nimport {AppStateType} from '../../../main/BLL/store';\r\nimport {setAuthMe} from '../../Sign-In/BLL/signInReducer';\r\n\r\nconst SET_PACKS = 'cards/packsReducer/SET_PACKS';\r\nconst UPDATE_PACK = 'cards/packsReducer/UPDATE_PACK';\r\nconst SET_NEW_PAGE = 'cards/packsReducer/SET_NEW_PAGE';\r\n\r\nconst initialState = {\r\n    packs: [] as Array<PackItemType>,\r\n    pageCount: 4 as number,\r\n    page: 1 as number\r\n};\r\n\r\ntype StateType = typeof initialState;\r\ntype ActionsType = SetPacksType | UpdatePackType | SetMessageTextType | IsLoadingACType | SetNewPageType;\r\n\r\nexport const packsReducer = (state: StateType = initialState, action: ActionsType): StateType => {\r\n    switch (action.type) {\r\n        case SET_PACKS:\r\n            return {\r\n                ...state,\r\n                packs: action.packs\r\n            };\r\n        case UPDATE_PACK:\r\n            return {\r\n                ...state,\r\n                packs: state.packs.map(p => p._id === action.idPack ? {...p, ...action.newPack} : p)\r\n            };\r\n        case SET_NEW_PAGE:\r\n            return {\r\n                ...state,\r\n                page: action.newPage\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype SetPacksType = ReturnType<typeof setPacks>\r\nexport const setPacks = (packs: Array<PackItemType>) => ({type: SET_PACKS, packs} as const);\r\n\r\ntype UpdatePackType = ReturnType<typeof updatePackAC>;\r\nconst updatePackAC = (idPack: string, newPack: PackItemType) => ({type: UPDATE_PACK, idPack, newPack} as const);\r\n\r\ntype SetNewPageType = ReturnType<typeof SetNewPageAC>;\r\nexport const SetNewPageAC = (newPage: number) => ({type: SET_NEW_PAGE, newPage} as const);\r\n\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>;\r\n\r\nexport const getPacks = (token: string, sortParams?: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const userData = await dispatch(setAuthMe(token));\r\n        if (userData) {\r\n            const packsData = await packsAPI.getPacks(userData.token, sortParams);\r\n            setItemToLS('token', packsData.token);\r\n            dispatch(setPacks(packsData.cardPacks));\r\n        }\r\n    } catch (e) {\r\n        dispatch(setMessageText(e.response.data.error))\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};\r\n\r\nexport const getPacksNew = (token: string, page: number) => async (dispatch: Dispatch<ActionsType>) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const data = await packsAPI.getPacks(token, '', 4, page);\r\n        setItemToLS('token', data.token);\r\n        dispatch(setPacks(data.cardPacks));\r\n    } catch (e) {\r\n        dispatch(setMessageText(e.response.data.error))\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};\r\n\r\nexport const addPack = (token: string, packName: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const data = await packsAPI.addPack(token, packName);\r\n        await dispatch(getPacks(data.token));\r\n    } catch (e) {\r\n\r\n        dispatch(setMessageText(e.response.data.error))\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n\r\n};\r\n\r\nexport const changePack = (packId: string, token: string, newName: string) =>\r\n    async (dispatch: Dispatch) => {\r\n        try {\r\n            dispatch(isLoading(true));\r\n            const data = await packsAPI.updatePack(packId, token, newName);\r\n            setItemToLS('token', data.token);\r\n            dispatch(updatePackAC(packId, data.updatedCardsPack));\r\n        } catch (e) {\r\n            setItemToLS('token', e.response.data.token);\r\n            dispatch(setMessageText(e.response.data.error))\r\n        } finally {\r\n            dispatch(isLoading(false));\r\n        }\r\n    };\r\n\r\nexport const deletePack = (packId: string, token: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const data = await packsAPI.deletePack(packId, token);\r\n        setItemToLS('token', data.token);\r\n        await dispatch(getPacks(data.token))\r\n    } catch (e) {\r\n        setItemToLS('token', e.response.data.token);\r\n        dispatch(setMessageText(e.response.data.error));\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};","import React, {InputHTMLAttributes, DetailedHTMLProps, ChangeEvent, useState} from 'react';\r\nimport {Button} from \"../Button/Button\";\r\nimport s from './Search.module.scss'\r\nimport {Input} from \"../Input/Input\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../BLL/store\";\r\nimport {PackItemType} from \"../../../../features/Packs/types\";\r\nimport {getPacks, setPacks} from \"../../../../features/Packs/BLL/packsReducer\";\r\nimport {getItemFromLS} from \"../../../../features/Sign-In/LS-service/localStorage\";\r\n\r\n\r\nexport type InputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement> &\r\n    { searchQuery?: string, setQuery?: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n        toSearch?: () => void, toReset?: () => void}\r\n\r\nexport const Search: React.FC<InputPropsType> =\r\n    React.memo(({ onChange, setQuery, searchQuery, toSearch, toReset, ...props}) => {\r\n\r\n\r\n    return <div className={s.container}>\r\n        <div className={s.searchArea}>\r\n            <Input changeInput={setQuery} {...props} type='text'\r\n                   placeholder='Card name' value={searchQuery}\r\n\r\n            />\r\n        </div>\r\n        <Button title='Search' onClick={toSearch} style={{marginRight: '20px'}}/>\r\n        <Button title='Reset' onClick={toReset}/>\r\n    </div>\r\n});\r\n\r\nexport const SearchContainer = () => {\r\n\r\n    //Всё что надо, передаём через пропсы и компонента становится универсальной!\r\n\r\n    // Достаём массив колод из state\r\n    const dispatch = useDispatch();\r\n    const cardsPack = useSelector<AppStateType, Array<PackItemType>>(state => state.packs.packs);\r\n\r\n    // Сброс результатов поиска\r\n    const toReset = () => {\r\n        const token = getItemFromLS('token') as string; // Достаём токен, т.к. его надо передать в getPacks\r\n        dispatch(getPacks(token))\r\n    };\r\n\r\n    const toSearch = () => {\r\n        let result = cardsPack.filter((i: PackItemType) => {\r\n            return i.name.match(new RegExp(searchQuery, 'g'));\r\n        });  // Поиск совпадений запроса в массиве колод\r\n        dispatch(setPacks(result)); // Сетаем новый массив\r\n    };\r\n\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const setQuery = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchQuery(e.currentTarget.value)\r\n    };\r\n\r\n    return <Search setQuery={setQuery} searchQuery={searchQuery} toSearch={toSearch} toReset={toReset}/>\r\n};\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps, useEffect, useState} from 'react';\r\nimport s from './Paginator.module.scss';\r\nimport {Button} from \"../Button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../BLL/store\";\r\nimport {getPacksNew, SetNewPageAC} from \"../../../../features/Packs/BLL/packsReducer\";\r\nimport {getItemFromLS} from \"../../../../features/Sign-In/LS-service/localStorage\";\r\n\r\nexport type ButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>,\r\n    HTMLButtonElement> &\r\n    {\r\n        title: string, currentPage: number, setPage: any,\r\n        disableLeftBtn: boolean, disableRightBtn: boolean, lastPage: any,\r\n        b4Call: () => void, b1Call: () => void, b1: string | number, b2: string | number,\r\n        b3: string | number, b4: string | number, showSpan: boolean, arrowsCall: any\r\n    };\r\n\r\nconst Paginator: React.FC<ButtonPropsType> =\r\n    React.memo(({ title, currentPage, setPage, disableLeftBtn, disableRightBtn, lastPage,\r\n                    b4Call, b1Call, b1, b2, b3, b4, showSpan, arrowsCall,\r\n                                                             ...props\r\n                                                         }) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <h3>Pages</h3>\r\n            <Button title={'<'} className={s.arrow} disabled={disableLeftBtn} onClick={() => {arrowsCall('left')}} />\r\n            <Button title={b1.toString()} className={s.button} onClick={b1Call} />\r\n            <Button title={b2.toString()} className={s.button} onClick={() => {\r\n                setPage(0)\r\n            }}/>\r\n            <Button title={b3.toString()} className={s.button} onClick={() => {\r\n                setPage(1)\r\n            }}/>\r\n            <Button title={b4.toString()} className={s.button} onClick={b4Call}/>\r\n            {showSpan &&  <span>...</span>}\r\n            <Button title={lastPage || '...'} className={s.button} onClick={() => {setPage(lastPage)}}/>\r\n            <Button title={'>'} className={s.arrow} disabled={disableRightBtn} onClick={() => {arrowsCall('right')}}/>\r\n        </div>\r\n    )\r\n});\r\nexport const PaginatorContainer = () => {\r\n\r\n    // Нужно починить:\r\n    // 1. Дизейблы.\r\n    // 2. Переключение страниц стрелками\r\n\r\n    // Значения кнопок\r\n    const [btns, setBtns] = useState([1, 4]);\r\n    const [btns2, setBtns2] = useState([btns[0] + 1, btns[0] + 2]);\r\n\r\n    // Данные\r\n    // const itemsCount = useSelector<any, number>(s => s.packs.packs.length);  //Кол-во колод\r\n    // const pagesCount = Math.ceil(itemsCount / pageSize); // Кол-во страниц\r\n    // let lastPage = currentPage * pageSize;\r\n    // const pageSize = useSelector<AppStateType, number>(s => s.packs.pageCount); // Кол-во элементов на странице(РАЗМЕР)\r\n\r\n    let currentPage = useSelector<AppStateType, number>(s => s.packs.page); // Текущая страница\r\n    let lastPage = 25;\r\n\r\n    // span show\r\n    const [showSpan, setShowSpan] = useState<boolean>(true);\r\n\r\n    // Проверки на кнопку 1,4\r\n    const [isB4, setIsB4] = useState<boolean>(false);\r\n    const [isB1, setIsB1] = useState<boolean>(true);\r\n\r\n    // Блокировка кнопок <>\r\n    const [disableLeftBtn, setDisableLeftBtn] = useState<boolean>(false);\r\n    const [disableRightBtn, setDisableRightBtn] = useState<boolean>(true);\r\n\r\n    useEffect(() => {\r\n        if (currentPage === 1) {\r\n            setDisableLeftBtn(true);\r\n        } else if (lastPage === currentPage) {\r\n            setDisableRightBtn(true);\r\n            setShowSpan(false);\r\n            setDisableLeftBtn(false);\r\n        } else if (currentPage < lastPage - 4 ) {\r\n            setShowSpan(true);\r\n        }\r\n        else {\r\n            setDisableRightBtn(false);\r\n            setDisableLeftBtn(false);\r\n        }\r\n    }, [currentPage]);\r\n    useEffect(() => {btns[0] < 1 && setBtns([1, 4])});\r\n\r\n    // Callbacks\r\n    const dispatch = useDispatch();\r\n\r\n    // переключение страниц <>\r\n    const arrowsCall = (dir: string) => {\r\n       if (dir === 'left' && currentPage > 1) {\r\n           currentPage -= 1\r\n       } else {\r\n           currentPage += 1\r\n       }\r\n        setPage(null);\r\n    };\r\n    //Кнопка 4\r\n    const b4Call = () => {\r\n        if(btns[1] === lastPage - 1) {\r\n            currentPage = btns[1];\r\n        } else {\r\n            currentPage = btns[1];\r\n            setBtns([currentPage, currentPage + 3]);\r\n        }\r\n        setIsB4(true);\r\n        setIsB1(false);\r\n        setPage(null);\r\n    };\r\n    //Кнопка 1\r\n    const b1Call = () => {\r\n        setIsB1(true);\r\n        if (btns[0] > 1) {\r\n            currentPage = btns[0];\r\n            setBtns([currentPage - 3, currentPage]);\r\n            setIsB4(false)\r\n        }\r\n        setPage(null);\r\n    };\r\n    // Изменение состояния кнопок 2, 3\r\n    useEffect(() => {\r\n        btns2[0] !== btns[0] + 1 && setBtns2([btns[0] + 1, btns[0] + 2]);\r\n    }, [btns2]);\r\n\r\n    // Вызов санки, экшена\r\n    const setPage = (btn: number | null) => {\r\n        if (btn === 0) {\r\n            currentPage = btns2[0];\r\n        } else if (btn === 1) {\r\n            currentPage = btns2[1];\r\n        } else if (btn === lastPage) {\r\n            currentPage = lastPage;\r\n            setBtns([lastPage - 4, lastPage - 1]);\r\n        }\r\n        setBtns2([btns[0] + 1, btns[0] + 2]);\r\n        dispatch(SetNewPageAC(currentPage));\r\n        const token = getItemFromLS('token') as string;\r\n        dispatch(getPacksNew(token, currentPage))\r\n    };\r\n\r\n    return <Paginator title={''}\r\n                      currentPage={currentPage}\r\n                      setPage={setPage}\r\n                      disableLeftBtn={disableLeftBtn}\r\n                      disableRightBtn={disableRightBtn}\r\n                      lastPage={lastPage}\r\n                      b4Call={b4Call}\r\n                      b1Call={b1Call}\r\n                      b1={btns[0]} b2={btns2[0]} b3={btns2[1]} b4={btns[1]}\r\n                      showSpan={showSpan}\r\n                      arrowsCall={arrowsCall}\r\n    />\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, ChangeEvent} from 'react';\r\nimport {Modal} from '../../../../main/UI/common/Modal Windows/Modal/Modal';\r\nimport {Button} from '../../../../main/UI/common/Button/Button';\r\nimport {NewInput} from '../../../../main/UI/common/NewInput/NewInput';\r\n\r\ntype AddPackModalPropsType = {\r\n    modalType: string\r\n    hideModal: () => void\r\n    addPack: (value: string) => void\r\n}\r\n\r\nexport const AddPackModal = React.memo((props: AddPackModalPropsType) => {\r\n    const {modalType, hideModal, addPack} = props;\r\n    const [name, setName] = useState<string>('');\r\n\r\n    const changeInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    };\r\n\r\n    const onAddPack = () => {\r\n        addPack(name);\r\n        hideModal();\r\n    };\r\n\r\n    return (\r\n        <Modal isShow={modalType === 'add'} hideModal={hideModal}>\r\n            New pack name:\r\n            <NewInput placeholder={'Enter name'} value={name}\r\n                      onChange={changeInput} autoFocus={true}/>\r\n            <Button title={'Create pack'} onClick={onAddPack}/>\r\n        </Modal>\r\n    )\r\n});\r\n","import React, {useState, ChangeEvent, useEffect} from 'react';\r\nimport {Modal} from '../../../../main/UI/common/Modal Windows/Modal/Modal';\r\nimport {Button} from '../../../../main/UI/common/Button/Button';\r\nimport {NewInput} from '../../../../main/UI/common/NewInput/NewInput';\r\n\r\ntype AddPackModalPropsType = {\r\n    modalType: string\r\n    hideModal: () => void\r\n    onChangePack: (value: string) => void\r\n    currentPackName: string\r\n}\r\n\r\nexport const ChangePackModal = React.memo((props: AddPackModalPropsType) => {\r\n    const {modalType, hideModal, onChangePack, currentPackName} = props;\r\n    const [name, setName] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        setName(currentPackName)\r\n    }, [currentPackName, setName]);\r\n\r\n    const changeInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    };\r\n\r\n    const changePack = () => {\r\n        onChangePack(name);\r\n        hideModal();\r\n    };\r\n\r\n    return (\r\n        <Modal isShow={modalType === 'change'} hideModal={hideModal}>\r\n            Change name:\r\n            <NewInput placeholder={'Enter new name'} value={name}\r\n                      onChange={changeInput} autoFocus={true}/>\r\n            <Button title={'Save changing'} onClick={changePack}/>\r\n        </Modal>\r\n    )\r\n});\r\n","import React from 'react';\r\nimport styles from './DeleteCardModal.module.scss';\r\nimport {Modal} from '../Modal/Modal';\r\nimport {Button} from '../../Button/Button';\r\n\r\ntype DeleteItemModalPropsType = {\r\n    modalType: string\r\n    deleteItem: () => void\r\n    hideModal: () => void\r\n}\r\n\r\nexport const DeleteItemModal = React.memo((props: DeleteItemModalPropsType) => {\r\n    const {modalType, deleteItem, hideModal} = props;\r\n\r\n    const onDelete = () => {\r\n        deleteItem();\r\n        hideModal()\r\n    };\r\n\r\n    return (\r\n        <Modal isShow={modalType === 'delete'}>\r\n            <p>Are you sure to want delete?</p>\r\n            <div className={styles.buttonsBlock}>\r\n                <Button title={'Yes'} onClick={onDelete}/>\r\n                <Button title={'No'} onClick={hideModal}/>\r\n            </div>\r\n        </Modal>\r\n    )\r\n});","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {Table} from '../../../main/UI/common/Table/Table';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../main/BLL/store';\r\nimport {getItemFromLS} from '../../Sign-In/LS-service/localStorage';\r\nimport {addPack, changePack, deletePack, getPacks} from '../BLL/packsReducer';\r\nimport {SIGN_IN_PATH} from '../../../main/UI/Routes/Routes';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PackItemType} from '../types';\r\nimport {SearchContainer} from \"../../../main/UI/common/Search/Search\";\r\nimport {MessageModal} from '../../../main/UI/common/Modal Windows/MessageModal/MessageModal';\r\nimport {setMessageText} from '../../../main/BLL/appReducer';\r\nimport Loading from '../../../main/UI/common/LoadingToggle/Loading';\r\nimport {PaginatorContainer} from \"../../../main/UI/common/Paginator/Paginator\";\r\nimport {AddPackModal} from './AddPackModal/AddPackModal';\r\nimport {ChangePackModal} from './ChangePackModal/ChangePackModal';\r\nimport {DeleteItemModal} from '../../../main/UI/common/Modal Windows/DeleteItemModal/DeleteCardModal';\r\n\r\nexport const Packs = function () {\r\n    const headers = ['Name', 'Grade', 'Add Pack'];\r\n    const [firstRendering, setFirstRendering] = useState<boolean>(true);\r\n    const [currentPackId, setCurrentPackId] = useState<string>('');\r\n    const [currentPackName, setCurrentPackName] = useState<string>('');\r\n    const [modalType, setModalType] = useState<string>('');\r\n    let token = getItemFromLS('token');\r\n\r\n    const isLoading = useSelector<AppStateType, boolean>(state => state.signUp.isLoading);\r\n    const packs = useSelector<AppStateType, Array<PackItemType>>(state => state.packs.packs);\r\n    const messageText = useSelector<AppStateType, string>(state => state.app.message);\r\n    const ownerId = useSelector<AppStateType, string | undefined>(state => state.signIn.userData?._id);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (firstRendering && token) {\r\n            dispatch(getPacks(token));\r\n            setFirstRendering(false);\r\n        }\r\n\r\n    }, [dispatch, token, setFirstRendering, firstRendering]);\r\n\r\n    const showModal = useCallback((modalType: string, packId?: string, creatorId?: string, packName?: string) => {\r\n        if ((modalType === 'delete' || modalType === 'change') && creatorId !== ownerId) {\r\n            dispatch(setMessageText('This not your Pack'))\r\n        } else {\r\n            packId && setCurrentPackId(packId);\r\n            packName && setCurrentPackName(packName);\r\n            setModalType(modalType);\r\n        }\r\n    }, [setCurrentPackId, setCurrentPackName, setModalType, ownerId, dispatch]);\r\n\r\n    const hideModal = useCallback(() => {\r\n        setModalType('');\r\n    }, [setModalType]);\r\n\r\n    const onGetPacks = useCallback((sortParams: string) => {\r\n        token && dispatch(getPacks(token, `sortPacks=${sortParams}`));\r\n    }, [dispatch, token]);\r\n\r\n    const onChangePack = useCallback((newName: string) => {\r\n        token && dispatch(changePack(currentPackId, token, newName));\r\n    }, [dispatch, token, currentPackId]);\r\n\r\n    const onAddPack = useCallback((title: string) => {\r\n        token && dispatch(addPack(token, title));\r\n    }, [dispatch, token]);\r\n\r\n    const onDeletePack = useCallback(() => {\r\n        token && dispatch(deletePack(currentPackId, token));\r\n    }, [dispatch, token, currentPackId]);\r\n\r\n\r\n    if (isLoading) return <Loading/>;\r\n    if (!token) return <Redirect to={SIGN_IN_PATH}/>;\r\n\r\n    return (\r\n        <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n            <SearchContainer/>\r\n            <Table columnsHeaders={headers} rows={packs} getItems={onGetPacks}\r\n                   tableModel={'packs'} showModal={showModal}/>\r\n            <PaginatorContainer/>\r\n            <MessageModal messageText={messageText} isResponseError={true}\r\n                          actionCreator={setMessageText('')}/>\r\n            <AddPackModal modalType={modalType} addPack={onAddPack}\r\n                          hideModal={hideModal}/>\r\n            <ChangePackModal modalType={modalType} onChangePack={onChangePack}\r\n                             hideModal={hideModal} currentPackName={currentPackName}/>\r\n            <DeleteItemModal modalType={modalType} deleteItem={onDeletePack} hideModal={hideModal}/>\r\n            {isLoading && <Loading/>}\r\n        </div>\r\n    )\r\n};","import axios from 'axios';\r\nimport {CardsType, DeletedCardType, NewCardType, UpdatedCardType} from '../types';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0'\r\n});\r\n\r\nexport const cardsAPI = {\r\n    getCards(token: string, packId: string, sortParams: string = '') {\r\n        return instance.get<CardsType>(`/cards/card?token=${token}&cardsPack_id=${packId}&${sortParams}`)\r\n            .then(res => res.data)\r\n    },\r\n\r\n    addCard(token: string, packId: string, question: string, answer: string) {\r\n        return instance.post<NewCardType>('/cards/card', {\r\n            card: {cardsPack_id: packId, question, answer, grade: 0},\r\n            token\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n\r\n    updateCard(cardId: string, token: string, question: string, answer: string) {\r\n        return instance.put<UpdatedCardType>('/cards/card', {\r\n            card: {_id: cardId, question, answer, grade: 0},\r\n            token\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n\r\n    deleteCard(cardId: string, token: string) {\r\n        return instance.delete<DeletedCardType>(`/cards/card?token=${token}&id=${cardId}`)\r\n            .then(res => res.data)\r\n    }\r\n};","import {AppStateType} from '../../../main/BLL/store';\r\nimport {ThunkAction} from 'redux-thunk';\r\nimport {Dispatch} from 'redux';\r\nimport {isLoading} from '../../Sign-Up/BLL/SignUpReducer';\r\nimport {setItemToLS} from '../../Sign-In/LS-service/localStorage';\r\nimport {setMessageText, SetMessageTextType} from '../../../main/BLL/appReducer';\r\nimport {IsLoadingACType} from '../../Sign-Up/BLL/SignUpTypes';\r\nimport {cardsAPI} from '../DAL/cardsAPI';\r\nimport {CardItemType} from '../types';\r\nimport {setAuthMe} from '../../Sign-In/BLL/signInReducer';\r\n\r\nconst SET_CARDS = 'cards/packsReducer/SET_CARDS';\r\nconst UPDATE_CARD = 'cards/packsReducer/UPDATE_CARD';\r\n\r\nconst initialState = {\r\n    cards: [] as Array<CardItemType>\r\n};\r\n\r\ntype StateType = typeof initialState;\r\ntype ActionsType = SetPacksType | UpdateCardType | SetMessageTextType | IsLoadingACType;\r\n\r\nexport const cardsReducer = (state: StateType = initialState, action: ActionsType): StateType => {\r\n    switch (action.type) {\r\n        case SET_CARDS:\r\n            return {\r\n                ...state,\r\n                cards: action.cards\r\n            };\r\n        case UPDATE_CARD:\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(c => c._id === action.cardId ? {...c, ...action.newCard} : c)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype SetPacksType = ReturnType<typeof setCards>\r\nconst setCards = (cards: Array<CardItemType>) => ({type: SET_CARDS, cards} as const);\r\n\r\ntype UpdateCardType = ReturnType<typeof updateCardAC>;\r\nconst updateCardAC = (cardId: string, newCard: CardItemType) => ({type: UPDATE_CARD, cardId, newCard} as const);\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>;\r\n\r\nexport const getCards = (token: string, packId: string, sortParams?: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const userData = await dispatch(setAuthMe(token));\r\n        if (userData) {\r\n            const cardsData = await cardsAPI.getCards(userData.token, packId, sortParams);\r\n            setItemToLS('token', cardsData.token);\r\n            dispatch(setCards(cardsData.cards));\r\n        }\r\n    } catch (e) {\r\n        dispatch(setMessageText(e.response.data.error))\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};\r\n\r\nexport const addCard = (token: string, packId: string, question: string, answer: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const data = await cardsAPI.addCard(token, packId, question, answer);\r\n        await dispatch(getCards(data.token, data.newCard.cardsPack_id));\r\n    } catch (e) {\r\n        setItemToLS('token', e.response.data.token);\r\n        dispatch(setMessageText(e.response.data.error))\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n\r\n};\r\n\r\nexport const changeCard = (cardId: string, token: string, question: string, answer: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const data = await cardsAPI.updateCard(cardId, token, question, answer);\r\n        setItemToLS('token', data.token);\r\n        dispatch(updateCardAC(data.updatedCard._id, data.updatedCard));\r\n    } catch (e) {\r\n        dispatch(setMessageText(e.response.data.error))\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};\r\n\r\nexport const deleteCard = (cardId: string, token: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(isLoading(true));\r\n        const data = await cardsAPI.deleteCard(cardId, token);\r\n        setItemToLS('token', data.token);\r\n        await dispatch(getCards(data.token, data.deletedCard.cardsPack_id))\r\n    } catch (e) {\r\n        dispatch(setMessageText(e.response.data.error));\r\n    } finally {\r\n        dispatch(isLoading(false));\r\n    }\r\n};","import React, {ChangeEvent, useState} from 'react';\r\nimport {Modal} from '../../../../main/UI/common/Modal Windows/Modal/Modal';\r\nimport {NewInput} from '../../../../main/UI/common/NewInput/NewInput';\r\nimport {Button} from '../../../../main/UI/common/Button/Button';\r\n\r\ntype AddCardModalPropsType = {\r\n    modalType: string\r\n    hideModal: () => void\r\n    addCard: (question: string, answer: string) => void\r\n}\r\n\r\nexport const AddCardModal = React.memo((props: AddCardModalPropsType) => {\r\n    const {modalType, addCard, hideModal} = props;\r\n    const [question, setQuestion] = useState<string>('');\r\n    const [answer, setAnswer] = useState<string>('');\r\n\r\n    const changeQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value)\r\n    };\r\n\r\n    const changeAnswer = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value)\r\n    };\r\n\r\n    const onAddCard = () => {\r\n        addCard(question, answer);\r\n        hideModal();\r\n    };\r\n\r\n    return (\r\n        <Modal isShow={modalType === 'add'} hideModal={hideModal}\r\n               modalSize={{width: '400px', height: '300px'}}>\r\n            New card question:\r\n            <NewInput placeholder={'Enter question'} value={question} onChange={changeQuestion}\r\n                      autoFocus={true} style={{marginBottom: '10px'}}/>\r\n            New card answer:\r\n            <NewInput placeholder={'Enter answer'} value={answer}\r\n                      onChange={changeAnswer} autoFocus={true}/>\r\n            <Button title={'Create card'} onClick={onAddCard}/>\r\n        </Modal>\r\n    )\r\n});","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {Modal} from '../../../../main/UI/common/Modal Windows/Modal/Modal';\r\nimport {NewInput} from '../../../../main/UI/common/NewInput/NewInput';\r\nimport {Button} from '../../../../main/UI/common/Button/Button';\r\n\r\ntype ChangeCardModalPropsType = {\r\n    modalType: string\r\n    hideModal: () => void\r\n    changeCard: (question: string, answer: string) => void\r\n    currentQuestion: string\r\n    currentAnswer: string\r\n}\r\n\r\nexport const ChangeCardModal = React.memo((props: ChangeCardModalPropsType) => {\r\n    const {modalType, changeCard, hideModal, currentQuestion, currentAnswer} = props;\r\n    const [question, setQuestion] = useState<string>('');\r\n    const [answer, setAnswer] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        setQuestion(currentQuestion);\r\n        setAnswer(currentAnswer)\r\n    }, [currentQuestion, currentAnswer, setQuestion, setAnswer]);\r\n\r\n    const changeQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value)\r\n    };\r\n\r\n    const changeAnswer = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value)\r\n    };\r\n\r\n    const onChangeCard = () => {\r\n        changeCard(question, answer);\r\n        hideModal();\r\n    };\r\n\r\n    return (\r\n        <Modal isShow={modalType === 'change'} hideModal={hideModal}\r\n               modalSize={{width: '400px', height: '300px'}}>\r\n            Change question:\r\n            <NewInput placeholder={'Enter question'} value={question} onChange={changeQuestion}\r\n                      autoFocus={true} style={{marginBottom: '10px'}}/>\r\n            Change answer:\r\n            <NewInput placeholder={'Enter answer'} value={answer}\r\n                      onChange={changeAnswer} autoFocus={true}/>\r\n            <Button title={'Save changing'} onClick={onChangeCard}/>\r\n        </Modal>\r\n    )\r\n});","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {Table} from '../../../main/UI/common/Table/Table';\r\nimport Loading from '../../../main/UI/common/LoadingToggle/Loading';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../main/BLL/store';\r\nimport {getItemFromLS} from '../../Sign-In/LS-service/localStorage';\r\nimport {MessageModal} from '../../../main/UI/common/Modal Windows/MessageModal/MessageModal';\r\nimport {setMessageText} from '../../../main/BLL/appReducer';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {SIGN_IN_PATH} from '../../../main/UI/Routes/Routes';\r\nimport {addCard, getCards, changeCard, deleteCard} from '../BLL/cardsReducer';\r\nimport {CardItemType} from '../types';\r\nimport {AddCardModal} from './AddCardModal/AddCardModal';\r\nimport {ChangeCardModal} from './ChangeCardModal/ChangeCardModal';\r\nimport {DeleteItemModal} from '../../../main/UI/common/Modal Windows/DeleteItemModal/DeleteCardModal';\r\n\r\ntype CardsPropsType = {\r\n    state: { cardCreatorId: string | undefined }\r\n}\r\n\r\nexport const Cards = function (props: CardsPropsType) {\r\n    const headers = ['Question', 'Answer', 'Grade', 'Add Card'];\r\n    const [firstRendering, setFirstRendering] = useState<boolean>(true);\r\n    const [modalType, setModalType] = useState<string>('');\r\n    const [currentCardId, setCurrentCardId] = useState<string>('');\r\n    const [currentQuestion, setCurrentQuestion] = useState<string>('');\r\n    const [currentAnswer, setCurrentAnswer] = useState<string>('');\r\n    const token = getItemFromLS('token');\r\n    const cardCreatorId = props.state.cardCreatorId;\r\n\r\n    const isLoading = useSelector<AppStateType, boolean>(state => state.signUp.isLoading);\r\n    const cards = useSelector<AppStateType, Array<CardItemType>>(state => state.cards.cards);\r\n    const messageText = useSelector<AppStateType, string>(state => state.app.message);\r\n    const ownerId = useSelector<AppStateType, string | undefined>(state => state.signIn.userData?._id);\r\n\r\n    const {packId} = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        if (firstRendering && token) {\r\n            dispatch(getCards(token, packId));\r\n            setFirstRendering(false);\r\n        }\r\n    }, [dispatch, token, setFirstRendering, firstRendering, packId]);\r\n\r\n    const showModal = useCallback((modalType: string, cardId?: string, creatorId?: string, question?: string, answer?: string) => {\r\n        console.log(cardCreatorId, ownerId);\r\n        if (cardCreatorId !== ownerId) {\r\n            dispatch(setMessageText('This not your Card'))\r\n        } else {\r\n            setModalType(modalType);\r\n            cardId && setCurrentCardId(cardId);\r\n            question && setCurrentQuestion(question);\r\n            answer && setCurrentAnswer(answer);\r\n        }\r\n    }, [setModalType, setCurrentCardId, setCurrentAnswer, setCurrentQuestion, ownerId, dispatch, cardCreatorId]);\r\n\r\n    const onGetCards = useCallback((sortParams: string) => {\r\n        token && dispatch(getCards(token, packId, `sortCards=${sortParams}`))\r\n    }, [dispatch, token, packId]);\r\n\r\n    const onChangeCard = useCallback((question: string, answer: string) => {\r\n        token && dispatch(changeCard(currentCardId, token, question, answer));\r\n    }, [dispatch, token, currentCardId]);\r\n\r\n    const onAddCard = useCallback((question: string, answer: string) => {\r\n        token && dispatch(addCard(token, packId, question, answer))\r\n    }, [dispatch, token, packId]);\r\n\r\n    const onDeleteCard = useCallback(() => {\r\n        token && dispatch(deleteCard(currentCardId, token))\r\n    }, [dispatch, token, currentCardId]);\r\n\r\n    const hideModal = useCallback(() => {\r\n        setModalType('');\r\n    }, []);\r\n\r\n\r\n    if (isLoading) return <Loading/>;\r\n    if (!token) return <Redirect to={SIGN_IN_PATH}/>;\r\n\r\n    return <>\r\n        <Table columnsHeaders={headers} rows={cards} getItems={onGetCards}\r\n               tableModel={'cards'} showModal={showModal}/>\r\n        <MessageModal messageText={messageText} isResponseError={true}\r\n                      actionCreator={setMessageText('')}/>\r\n        <AddCardModal modalType={modalType} addCard={onAddCard} hideModal={hideModal}/>\r\n        <ChangeCardModal modalType={modalType} hideModal={hideModal} changeCard={onChangeCard}\r\n                         currentQuestion={currentQuestion} currentAnswer={currentAnswer}/>\r\n        <DeleteItemModal modalType={modalType} deleteItem={onDeleteCard} hideModal={hideModal}/>\r\n        {isLoading && <Loading/>}\r\n    </>\r\n};","import axios from 'axios';\r\nimport {CardItemType} from '../types';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0'\r\n});\r\n\r\nexport const learnAPI = {\r\n    putGrade(token: string, grade: number, cardId: string) {\r\n        return instance.put<CardItemType>(`/cards/grade`, {token: token, grade: grade, card_id: cardId})\r\n            .then(res => res.data)\r\n    }\r\n};","import {AppStateType} from '../../../main/BLL/store';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport {Dispatch} from 'redux';\r\nimport { isLoading } from '../../Sign-Up/BLL/SignUpReducer';\r\nimport { setItemToLS } from '../../Sign-In/LS-service/localStorage';\r\nimport {setMessageText, SetMessageTextType} from '../../../main/BLL/appReducer';\r\nimport {IsLoadingACType} from '../../Sign-Up/BLL/SignUpTypes';\r\nimport { CardItemType } from '../types';\r\nimport {learnAPI} from \"../DAL/learnAPI\";\r\n\r\nconst UPDATE_GRADE = 'learn/learnReducer/UPDATE_GRADE';\r\n\r\nconst initialState = {\r\n    cards: [] as Array<CardItemType>\r\n};\r\n\r\ntype StateType = typeof initialState;\r\n// type ActionsType =| SetMessageTextType | IsLoadingACType;\r\n\r\nexport const learnReducer = (state: StateType = initialState, action: UpdateGradeType): StateType => {\r\n    switch (action.type) {\r\n        case UPDATE_GRADE:\r\n            return {\r\n                ...state\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype UpdateGradeType = ReturnType<typeof updateGrade>\r\nconst updateGrade = (grade: number) => ({type:UPDATE_GRADE, grade} as const);\r\n\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, UpdateGradeType>;\r\n\r\nexport const setNewGrade = (token: string, grade: number, cardId: string) =>  async (dispatch: Dispatch<UpdateGradeType>) => {\r\n    try {\r\n\r\n        // dispatch(isLoading(true));\r\n        const data = await learnAPI.putGrade(token, grade, cardId);\r\n        setItemToLS('token', data.token);\r\n        dispatch(updateGrade(data.grade));\r\n        // dispatch(updateGrade(data.card.grade));\r\n    } catch (e) {\r\n        // dispatch(setMessageText(e.response.data.error))\r\n    } finally {\r\n        // dispatch(isLoading(false));\r\n    }\r\n};\r\n\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, useCallback, useEffect, useState} from 'react';\r\nimport s from './Learn.module.scss'\r\nimport {Button} from \"../../../main/UI/common/Button/Button\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../main/BLL/store\";\r\nimport {CardItemType} from \"../../Cards/types\";\r\nimport {getCards} from \"../../Cards/BLL/cardsReducer\";\r\nimport {getItemFromLS} from \"../../Sign-In/LS-service/localStorage\";\r\nimport {setNewGrade} from \"../BLL/learnReducer\";\r\n\r\n\r\ntype LearnType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>,\r\n        HTMLInputElement> &\r\n    {\r\n        show: boolean, setShow: (show: boolean) => void, cards: Array<CardItemType>, currentCard: number,\r\n        doAnswer: (grade: number) => void, isClicked: boolean, clickedStyle: any\r\n    }\r\n\r\nconst Learn: React.FC<LearnType> =  ({\r\n                                         show, setShow, cards, currentCard, doAnswer,\r\n                                         isClicked, clickedStyle\r\n}) => {\r\n\r\n\r\n    return <div className={s.container}>\r\n        <div className={s.visible}>\r\n            <h2>Learning Page</h2>\r\n            <p>{cards[currentCard].question}</p>\r\n            <Button title='check' onClick={() => {setShow(!show)}}/>\r\n        </div>\r\n        {   show &&\r\n            <div className={s.hidden}>\r\n            <p>{cards[currentCard].answer}</p>\r\n            <div className={s.body}>\r\n                <div className={s.answers}>\r\n                    <span onClick={() => {doAnswer(1)}}>Не знал.</span>\r\n                    <span onClick={() => {doAnswer(2)}}>Что-то слышал про это...</span>\r\n                    <span onClick={() => {doAnswer(3)}}>Угадал</span>\r\n                    <span onClick={() => {doAnswer(4)}}>Почти знал</span>\r\n                    <span onClick={() => {doAnswer(5)}}>Знал на 100%</span>\r\n                </div>\r\n                <div className={s.nextBtnContainer}>\r\n                    <Button title='Next >>>'/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        }\r\n    </div>\r\n};\r\n\r\nexport const LearnContainer = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    // Достаём из параметров NavLink параметр id (передали его в Table, в NavLink-е)\r\n    const params = useParams<{id:string}>();\r\n\r\n    // Показать/спрятать ответ\r\n    const [show, setShow] = useState<boolean>(false);\r\n\r\n    // Достали токен\r\n    const token = getItemFromLS('token') as string;\r\n\r\n    const [firstRender, setFirstRender] = useState(true);\r\n    // Запрос за карточками\r\n    useEffect(() => {\r\n        if (firstRender) {\r\n            dispatch(getCards(token, params.id));\r\n            setFirstRender(false)\r\n        }\r\n        }, [dispatch, token, params.id, firstRender, setFirstRender]\r\n    );\r\n\r\n    // Текущий индекс массива(какая карточка отображается)\r\n    const currentCard = 0 as number;\r\n\r\n    // Достаём запрошенные карточки из редюсера\r\n    const cards = useSelector<AppStateType, Array<CardItemType>>(s => s.cards.cards);\r\n\r\n    // Достаём id карточки. Делаем проверку, чтобы длинна массива не была равна нулю, чтобы он успел прийти в редакс.\r\n    const cardId = cards.length !== 0 ? cards[currentCard]._id: '';\r\n\r\n    // Коллбэк на оценку карточки\r\n    const doAnswer = useCallback((grade: number) => {\r\n        // const token = getItemFromLS('token') as string;\r\n        dispatch(setNewGrade(token, grade, cardId));\r\n        setIsClicked(true)\r\n    }, [token, dispatch, cardId]);\r\n\r\n    const [isClicked, setIsClicked] = useState(false);\r\n    const clickedStyle = {backgroundColor: 'darksalmon'};\r\n\r\n    return cards.length  ? <Learn show={show} setShow={setShow} cards={cards} currentCard={currentCard}\r\n                                  doAnswer={doAnswer} isClicked={isClicked} clickedStyle={clickedStyle}\r\n    /> : <></>\r\n};","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport {SignInContainer} from '../../../features/Sign-In/UI/SignInContainer';\r\nimport {SignUpContainer} from '../../../features/Sign-Up/UI/SignUp';\r\nimport {SetNewPassContainer} from '../../../features/Set-New-Pass/UI/SetNewPassContainer';\r\nimport {Profile} from '../../../features/Profile/Profile';\r\nimport {ForgotContainer} from '../../../features/Forgot/UI/ForgotContainer';\r\nimport {Packs} from '../../../features/Packs/UI/Packs';\r\nimport {Cards} from '../../../features/Cards/UI/Cards';\r\nimport {AppStateType} from '../../BLL/store';\r\nimport {useSelector} from 'react-redux';\r\nimport {LearnContainer} from \"../../../features/Learn/UI/Learn\";\r\n\r\nexport const SIGN_IN_PATH = '/sign-in';\r\nexport const SIGN_UP_PATH = '/sign-up';\r\nexport const FORGOT_PATH = '/forgot';\r\nexport const SET_NEW_PASS_PATH = '/set-new-password';\r\nexport const PROFILE_PATH = '/profile';\r\nexport const PACKS_PATH = '/packs';\r\nexport const CARDS_PATH = '/cards';\r\nexport const LEARN = '/learn';\r\n\r\nexport const Routes = () => {\r\n    const cardCreatorId = useSelector<AppStateType, string | undefined>(state => state.cards.cards[0]?.user_id);\r\n    return (\r\n        <Switch>\r\n            <Route path={SIGN_IN_PATH} render={() => <SignInContainer/>}/>\r\n            <Route path={SIGN_UP_PATH} render={() => <SignUpContainer/>}/>\r\n            <Route path={FORGOT_PATH} render={() => <ForgotContainer/>}/>\r\n            <Route path={`${SET_NEW_PASS_PATH}/:resetToken?`} render={() => <SetNewPassContainer/>}/>\r\n            <Route path={PROFILE_PATH} render={() => <Profile/>}/>\r\n            <Route path={PACKS_PATH} render={() => <Packs/>}/>\r\n            <Route path={`${LEARN}/:id?`} render={() => <LearnContainer/>}/>\r\n            <Route path={`${CARDS_PATH}/:packId?`} render={() => <Cards state={{cardCreatorId:cardCreatorId}}/>}/>\r\n            <Redirect exact path={'/'} to={SIGN_IN_PATH}/>\r\n            <Route path={'*'} render={() => <h2> 404 ERROR PAGE NOT FOUND</h2>}/>\r\n        </Switch>\r\n    )\r\n};","import React from 'react';\r\nimport styles from './Header.module.scss';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {\r\n    SIGN_IN_PATH, SIGN_UP_PATH, FORGOT_PATH,\r\n    SET_NEW_PASS_PATH, PROFILE_PATH, PACKS_PATH, LEARN\r\n} from '../Routes/Routes';\r\nimport {Button} from '../common/Button/Button';\r\nimport {setItemToLS} from '../../../features/Sign-In/LS-service/localStorage';\r\nimport {loginSuccess, setUserData} from '../../../features/Sign-In/BLL/signInReducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../BLL/store';\r\n\r\nexport const Header = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.signIn.isAuth);\r\n\r\n    const signOut = () => {\r\n        setItemToLS('token', null);\r\n        dispatch(setUserData(null));\r\n        dispatch(loginSuccess(false));\r\n    };\r\n\r\n    return (\r\n        <header className={styles.header}>\r\n            <nav className={styles.navMenu}>\r\n                <NavLink to={SIGN_IN_PATH} activeClassName={styles.active}>Sign In</NavLink>\r\n                <NavLink to={SIGN_UP_PATH} activeClassName={styles.active}>Sign Up</NavLink>\r\n                <NavLink to={FORGOT_PATH} activeClassName={styles.active}>Forgot</NavLink>\r\n                <NavLink to={SET_NEW_PASS_PATH} activeClassName={styles.active}>Set New Password</NavLink>\r\n                <NavLink to={PROFILE_PATH} activeClassName={styles.active}>Profile</NavLink>\r\n                <NavLink to={PACKS_PATH} activeClassName={styles.active}>Packs</NavLink>\r\n                <NavLink to={LEARN} activeClassName={styles.active}>Learn</NavLink>\r\n            </nav>\r\n            {\r\n                isAuth && <div className={styles.signOut}>\r\n                    <Button title={'Sign Out'} onClick={signOut}/>\r\n                </div>\r\n            }\r\n        </header>\r\n    )\r\n};","import React from 'react';\r\nimport './App.css';\r\nimport {Header} from './main/UI/Header/Header';\r\nimport {Routes} from './main/UI/Routes/Routes';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Routes/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('MessageModal during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport {SingUpReducer} from '../../features/Sign-Up/BLL/SignUpReducer';\r\nimport { signInReducer } from '../../features/Sign-In/BLL/signInReducer';\r\nimport {forgotReducer} from '../../features/Forgot/BLL/forgotReducer';\r\nimport {setNewPassReducer} from '../../features/Set-New-Pass/BLL/setNewPassReducer';\r\nimport { appReducer } from './appReducer';\r\nimport {packsReducer} from '../../features/Packs/BLL/packsReducer';\r\nimport {cardsReducer} from '../../features/Cards/BLL/cardsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    signUp: SingUpReducer,\r\n    signIn: signInReducer,\r\n    forgot: forgotReducer,\r\n    setNewPass: setNewPassReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport { store } from './main/BLL/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HashRouter>\r\n          <Provider store={store}>\r\n              <App />\r\n          </Provider>\r\n      </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}